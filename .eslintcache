[{"E:\\MDP Project\\mdp-front-end\\src\\index.js":"1","E:\\MDP Project\\mdp-front-end\\src\\App.js":"2","E:\\MDP Project\\mdp-front-end\\src\\reportWebVitals.js":"3","E:\\MDP Project\\mdp-front-end\\src\\FileUpload.js":"4","E:\\MDP Project\\mdp-front-end\\src\\FormLayoutDemo.js":"5","E:\\MDP Project\\mdp-front-end\\src\\tempSave.js":"6","E:\\MDP Project\\mdp-front-end\\src\\AppWrapper.js":"7","E:\\MDP Project\\mdp-front-end\\src\\DataTable.js":"8","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeter.js":"9","E:\\MDP Project\\mdp-front-end\\src\\FolderStructure.js":"10","E:\\MDP Project\\mdp-front-end\\src\\Tree\\Tree.js":"11","E:\\MDP Project\\mdp-front-end\\src\\Tree\\Tree.style.js":"12","E:\\MDP Project\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.js":"13","E:\\MDP Project\\mdp-front-end\\src\\Tree\\File\\TreeFile.js":"14","E:\\MDP Project\\mdp-front-end\\src\\utils.js":"15","E:\\MDP Project\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.style.js":"16","E:\\MDP Project\\mdp-front-end\\src\\Tree\\File\\TreeFile.style.js":"17","E:\\MDP Project\\mdp-front-end\\src\\Tree\\TreePlaceholderInput.js":"18","E:\\MDP Project\\mdp-front-end\\src\\Tree\\FileIcons.js":"19","E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\constants.js":"20","E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\TreeContext.js":"21","E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\index.js":"22","E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\reducer.js":"23","E:\\MDP Project\\mdp-front-end\\src\\SidebarActions.js":"24","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMerge.js":"25","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterExtract.js":"26","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterValidate.js":"27","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFinalOutput.js":"28","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFict.js":"29","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterAnalyse.js":"30","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterDateFilter.js":"31","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMWH.js":"32"},{"size":493,"mtime":1614002859055,"results":"33","hashOfConfig":"34"},{"size":528,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":1152,"mtime":1612460608598,"results":"37","hashOfConfig":"34"},{"size":3289,"mtime":1613324066809,"results":"38","hashOfConfig":"34"},{"size":280556,"mtime":1614002841498,"results":"39","hashOfConfig":"34"},{"size":813,"mtime":1613232513515,"results":"40","hashOfConfig":"34"},{"size":18665,"mtime":1613654493197,"results":"41","hashOfConfig":"34"},{"size":10432,"mtime":1613981793806,"results":"42","hashOfConfig":"34"},{"size":5381,"mtime":1614001234700,"results":"43","hashOfConfig":"34"},{"size":1915,"mtime":1613064733755,"results":"44","hashOfConfig":"34"},{"size":1423,"mtime":1614000611910,"results":"45","hashOfConfig":"34"},{"size":3621,"mtime":1613062045359,"results":"46","hashOfConfig":"34"},{"size":2128,"mtime":1613062036491,"results":"47","hashOfConfig":"34"},{"size":1937,"mtime":1613058472582,"results":"48","hashOfConfig":"34"},{"size":234,"mtime":1613058472552,"results":"49","hashOfConfig":"34"},{"size":225,"mtime":1613058472546,"results":"50","hashOfConfig":"34"},{"size":2206,"mtime":1613058472558,"results":"51","hashOfConfig":"34"},{"size":257,"mtime":1613058472548,"results":"52","hashOfConfig":"34"},{"size":266,"mtime":1613058472570,"results":"53","hashOfConfig":"34"},{"size":303,"mtime":1613058472567,"results":"54","hashOfConfig":"34"},{"size":96,"mtime":1613058472572,"results":"55","hashOfConfig":"34"},{"size":1386,"mtime":1613058472574,"results":"56","hashOfConfig":"34"},{"size":2803,"mtime":1613104683921,"results":"57","hashOfConfig":"34"},{"size":5115,"mtime":1613751072898,"results":"58","hashOfConfig":"34"},{"size":2093,"mtime":1613983033085,"results":"59","hashOfConfig":"34"},{"size":5119,"mtime":1613840038921,"results":"60","hashOfConfig":"34"},{"size":932,"mtime":1613324066969,"results":"61","hashOfConfig":"34"},{"size":940,"mtime":1613324066969,"results":"62","hashOfConfig":"34"},{"size":927,"mtime":1613324066967,"results":"63","hashOfConfig":"34"},{"size":5454,"mtime":1613751004189,"results":"64","hashOfConfig":"34"},{"size":3168,"mtime":1613991995792,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s04f4x",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"75"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"75"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\MDP Project\\mdp-front-end\\src\\index.js",["146","147","148","149","150","151","152","153","154","155","156"],"E:\\MDP Project\\mdp-front-end\\src\\App.js",[],"E:\\MDP Project\\mdp-front-end\\src\\reportWebVitals.js",[],"E:\\MDP Project\\mdp-front-end\\src\\FileUpload.js",["157"],"import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport './cssFiles/fileUpload.css';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport React, { useRef } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nexport default function FileUploadDemo() {\r\n    const toast = useRef(null);\r\n\r\n    const onUpload = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={onUpload} multiple accept=\"image/*\" maxFileSize={1000000}\r\n                    emptyTemplate={<p className=\"p-m-0\">Drag and drop files to here to upload.</p>} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                \r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<FileUploadDemo />, rootElement);\r\n",["158","159"],"E:\\MDP Project\\mdp-front-end\\src\\FormLayoutDemo.js",["160","161","162","163","164","165"],"import \"primeicons/primeicons.css\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"./cssFiles/FormLayoutDemo.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { RadioButton } from \"primereact/radiobutton\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { InputTextarea } from \"primereact/inputtextarea\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { FileUpload } from \"primereact/fileupload\";\r\n\r\nexport default function FormLayoutDemo() {\r\n  const [year, setYear] = useState(\"\");\r\n  const [month, setMonth] = useState(\"\");\r\n\r\n  const [meterZippedFile, setMeterZippedFile] = useState();\r\n\r\n  const newBook = () => {\r\n    console.log(\"works\");\r\n    console.log(meterZippedFile);\r\n    console.log(meterZippedFile.name);\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"year\", year);\r\n    uploadData.append(\"month\", month);\r\n    uploadData.append(\"meterZippedFile\", meterZippedFile, meterZippedFile.name);\r\n    // var csrftoken = getCookie(\"csrftoken\");\r\n    console.log(uploadData);\r\n    // fetch(\"http://127.0.0.1:8000/fifteenmmdp/addNewMeterFile/\", {\r\n    //   method: \"POST\",\r\n    //   body: uploadData,\r\n    // })\r\n    //   .then((res) => console.log(res))\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const toast = useRef(null);\r\n\r\n  return (\r\n    <div>\r\n      <Toast ref={toast}></Toast>\r\n\r\n      <h5>Add meter cumulative data</h5>\r\n      <div className=\"p-formgroup-inline\">\r\n        <div className=\"p-field\">\r\n          <label className=\"p-sr-only\">Year</label>\r\n          <InputText\r\n            type=\"text\"\r\n            value={year}\r\n            placeholder=\"Year\"\r\n            onChange={(evt) => setYear(evt.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"p-field\">\r\n          <label className=\"p-sr-only\">Month</label>\r\n          <InputText\r\n            type=\"text\"\r\n            value={month}\r\n            placeholder=\"Month\"\r\n            onChange={(evt) => setMonth(evt.target.value)}\r\n          />\r\n        </div>\r\n        {/* <div className=\"p-field\">\r\n          <FileUpload\r\n            // name=\"demo[]\"\r\n            // url=\"./upload.php\"\r\n            // onUpload={onUpload}\r\n            // multiple\r\n            // accept=\"image/*\"\r\n            // maxFileSize={1000000}\r\n            emptyTemplate={\r\n              <p className=\"p-m-0\">Drag and drop files to here to upload.</p>\r\n            }\r\n            type=\"file\"\r\n            onChange={(evt) => setMeterZippedFile(evt.target.files[0])}\r\n          />\r\n        </div> */}\r\n        <div className=\"p-field\">\r\n          <label>\r\n            Meter Zip File\r\n            <input\r\n              type=\"file\"\r\n              onChange={(evt) => setMeterZippedFile(evt.target.files[0])}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <Button type=\"button\" label=\"Submit\" onClick={() => newBook()} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<FormLayoutDemo />, rootElement);\r\n","E:\\MDP Project\\mdp-front-end\\src\\tempSave.js",["166","167","168","169","170","171","172","173","174","175","176","177","178"],"E:\\MDP Project\\mdp-front-end\\src\\AppWrapper.js",["179","180","181","182","183","184","185"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  useLocation,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport DataTable from \"./DataTable\";\r\nimport ParticularMeter from \"./ParticularMeter\";\r\nimport SidebarActions from \"./SidebarActions\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/meterFile/:meterIdParam\">\r\n            <ParticularMeter />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <DataTable />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>;\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\DataTable.js",["186","187","188","189","190","191","192","193","194","195","196","197"],"import \"primeicons/primeicons.css\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"./cssFiles/DataTableDemo.css\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Tag } from \"primereact/tag\";\r\nimport axios from \"axios\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { Button } from \"primereact/button\";\r\nimport { FileUpload } from \"primereact/fileupload\";\r\nimport { Rating } from \"primereact/rating\";\r\nimport { Toolbar } from \"primereact/toolbar\";\r\nimport { InputTextarea } from \"primereact/inputtextarea\";\r\nimport { RadioButton } from \"primereact/radiobutton\";\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport \"primeflex/primeflex.css\";\r\nimport moment from \"moment\";\r\n// import \"./DataTableDemo.css\";\r\n\r\nexport default function DataTableCrudDemo() {\r\n  let emptyMeter = {\r\n    model: \"fifteenmmdp.allmeterfiles\",\r\n    pk: null,\r\n    fields: {\r\n      year: \"\",\r\n      month: \"\",\r\n      zippedMeterFile: null,\r\n      status: null,\r\n      startDate: null,\r\n      endDate: null,\r\n    },\r\n  };\r\n\r\n  const [meters, setMeters] = useState(null);\r\n  const [meter, setMeter] = useState(emptyMeter);\r\n  const [meterDialog, setMeterDialog] = useState(false);\r\n  const [selectedMeters, setSelectedMeters] = useState(null);\r\n  const [deleteMeterDialog, setDeleteMeterDialog] = useState(false);\r\n  const [deleteMetersDialog, setDeleteMetersDialog] = useState(false);\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [globalFilter, setGlobalFilter] = useState(null);\r\n  const toast = useRef(null);\r\n  const dt = useRef(null);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fifteenmmdp/getAllMeterData/\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setMeters(result);\r\n        console.log(result);\r\n      });\r\n  }, []);\r\n\r\n  const months = [\r\n    { month: \"January\", value: \"January\" },\r\n    { month: \"February\", value: \"February\" },\r\n    { month: \"March\", value: \"March\" },\r\n    { month: \"April\", value: \"April\" },\r\n    { month: \"May\", value: \"May\" },\r\n  ];\r\n\r\n  const openNew = () => {\r\n    setMeter(emptyMeter);\r\n    setSubmitted(false);\r\n    setMeterDialog(true);\r\n  };\r\n\r\n  const hideDialog = () => {\r\n    setSubmitted(false);\r\n    setMeterDialog(false);\r\n  };\r\n\r\n  const hideDeleteMeterDialog = () => {\r\n    setDeleteMeterDialog(false);\r\n  };\r\n\r\n  const hideDeleteMetersDialog = () => {\r\n    setDeleteMetersDialog(false);\r\n  };\r\n\r\n  const workWithMeterData = (rowData) => {\r\n    return (\r\n      <Button\r\n        label=\"Work with Meter Data\"\r\n        className=\"p-button-rounded p-button-secondary\"\r\n        onClick={() => history.push(\"/meterFile/\" + rowData.pk)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const downloadTemplate = (rowData) => {\r\n    return (\r\n      <>\r\n        <a\r\n          href={\r\n            \"http://127.0.0.1:8000/fifteenmmdp/media/\" +\r\n            rowData.fields.zippedMeterFile\r\n          }\r\n          download={\r\n            \"http://127.0.0.1:8000/fifteenmmdp/media/\" +\r\n            rowData.fields.zippedMeterFile\r\n          }\r\n        >\r\n          {rowData.fields.zippedMeterFile\r\n            ? rowData.fields.zippedMeterFile.split(\"/\").slice(-1).pop()\r\n            : null}\r\n        </a>\r\n        <br />\r\n        <br />\r\n        <TagDemo status={rowData.fields.status} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const dateRangeTemplate = (rowData) => {\r\n    return (\r\n      <>\r\n        {moment(rowData.fields.startDate).format(\"DD/MM/YYYY\") +\r\n          \" To \" +\r\n          moment(rowData.fields.endDate).format(\"DD/MM/YYYY\")}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const saveMeter = () => {\r\n    setSubmitted(true);\r\n    if (\r\n      meter.fields.year.trim() != \"\" &&\r\n      meter.fields.month.trim() != \"\" &&\r\n      meter.fields.zippedMeterFile &&\r\n      meter.fields.startDate &&\r\n      meter.fields.endDate\r\n    ) {\r\n      // let _meters = [...meters]; // Fetching already existing meters. Because we will use it for both edit & creation\r\n      // let _meter = { ...meter };\r\n\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"year\", meter.fields.year);\r\n      uploadData.append(\"month\", meter.fields.month);\r\n      uploadData.append(\"startDate\", meter.fields.startDate);\r\n      uploadData.append(\"endDate\", meter.fields.endDate);\r\n\r\n      uploadData.append(\r\n        \"meterZippedFile\",\r\n        meter.fields.zippedMeterFile,\r\n        meter.fields.zippedMeterFile.name\r\n      );\r\n      console.log(uploadData);\r\n\r\n      if (\r\n        moment(meter.fields.startDate, \"DD/MM/YYYY\") >=\r\n        moment(meter.fields.endDate, \"DD/MM/YYYY\")\r\n      ) {\r\n        toast.current.show({\r\n          severity: \"error\",\r\n          summary: \"Fix Start Date/End Date\",\r\n          detail: \"Start Date can't be greater than End Date\",\r\n          life: 3000,\r\n        });\r\n        return;\r\n      }\r\n\r\n      axios\r\n        .post(\"http://127.0.0.1:8000/fifteenmmdp/addNewMeterFile/\", uploadData)\r\n        .then((response) => {\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Server Error\",\r\n            detail: \"Data can not be added\",\r\n            life: 3000,\r\n          });\r\n          console.log(error);\r\n        });\r\n\r\n      setMeterDialog(false);\r\n      setMeter(emptyMeter);\r\n    }\r\n  };\r\n\r\n  const editMeter = (meter) => {\r\n    setMeter({ ...meter }); // meter object spread\r\n    setMeterDialog(true);\r\n  };\r\n\r\n  //   const editProduct = (product) => {\r\n  //     setProduct({ ...product }); // product object spread\r\n  //     setProductDialog(true);\r\n  //   };\r\n  const confirmDeleteMeter = (meter) => {\r\n    setMeter(meter);\r\n    setDeleteMeterDialog(true);\r\n  };\r\n\r\n  const deleteProduct = () => {\r\n    fetch(\"http://127.0.0.1:8000/fifteenmmdp/deleteNewMeterFile/\" + meter.pk)\r\n      .then((res) => {\r\n        console.log(res);\r\n        let _meters = meters.filter((val) => val.pk !== meter.pk);\r\n        setMeters(_meters);\r\n        setDeleteMeterDialog(false);\r\n        setMeter(emptyMeter);\r\n        toast.current.show({\r\n          severity: \"success\",\r\n          summary: \"Successful\",\r\n          detail: \"Product Deleted\",\r\n          life: 3000,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast.current.show({\r\n          severity: \"danger\",\r\n          summary: \"Unsuccessful\",\r\n          detail: \"Some error occured\",\r\n          life: 3000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // const findIndexById = (id) => {\r\n  //   let index = -1;\r\n  //   for (let i = 0; i < meters.length; i++) {\r\n  //     if (meters[i].pk === id) {\r\n  //       index = i;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n\r\n  //   return index;\r\n  // };\r\n\r\n  // const confirmDeleteSelected = () => {\r\n  //   setDeleteMetersDialog(true);\r\n  // };\r\n\r\n  const deleteSelectedProducts = () => {\r\n    let _meters = meters.filter((val) => !selectedMeters.includes(val));\r\n    setMeters(_meters);\r\n    setDeleteMetersDialog(false);\r\n    setSelectedMeters(null);\r\n    toast.current.show({\r\n      severity: \"success\",\r\n      summary: \"Successful\",\r\n      detail: \"Products Deleted\",\r\n      life: 3000,\r\n    });\r\n  };\r\n\r\n  const onInputChange = (e, name) => {\r\n    const val = (e.target && e.target.value) || \"\";\r\n    let _meter = { ...meter };\r\n    _meter[\"fields\"][`${name}`] = val;\r\n\r\n    setMeter(_meter);\r\n  };\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    // const val = e.value || 0;\r\n    let _meter = { ...meter };\r\n    // _meter[`${name}`] = val;\r\n    _meter.fields.zippedMeterFile = e.target.files[0];\r\n\r\n    setMeter(_meter);\r\n  };\r\n  const onDateChange = (e, name) => {\r\n    console.log(name);\r\n    console.log(moment(e.value).format(\"DD-MM-YYYY\"));\r\n\r\n    let _meter = { ...meter };\r\n    _meter[\"fields\"][`${name}`] = moment(e.value).format(\"DD-MM-YYYY\");\r\n    setMeter(_meter);\r\n  };\r\n\r\n  const leftToolbarTemplate = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          label=\"New Task\"\r\n          icon=\"pi pi-plus\"\r\n          className=\"p-button-success p-mr-2\"\r\n          onClick={openNew}\r\n        />\r\n        {/* <Button\r\n          label=\"Delete\"\r\n          icon=\"pi pi-trash\"\r\n          className=\"p-button-danger\"\r\n          onClick={confirmDeleteSelected}\r\n          disabled={!selectedMeters || !selectedMeters.length}\r\n        /> */}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const TagDemo = (props) => {\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <Tag className=\"p-mr-2\" severity=\"Primary\" value={props.status}></Tag>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const actionBodyTemplate = (rowData) => {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <Button\r\n          icon=\"pi pi-pencil\"\r\n          className=\"p-button-rounded p-button-success p-mr-2\"\r\n          onClick={() => {\r\n            console.log(rowData);\r\n            editMeter(rowData);\r\n          }}\r\n        /> */}\r\n        <Button\r\n          icon=\"pi pi-trash\"\r\n          className=\"p-button-rounded p-button-warning\"\r\n          onClick={() => confirmDeleteMeter(rowData)}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const header = (\r\n    <div className=\"table-header\">\r\n      <h5 className=\"p-m-0\">Manage Meter Files</h5>\r\n      <span className=\"p-input-icon-left\">\r\n        <i className=\"pi pi-search\" />\r\n        <InputText\r\n          type=\"search\"\r\n          onInput={(e) => setGlobalFilter(e.target.value)}\r\n          placeholder=\"Search...\"\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n  const meterDialogFooter = (\r\n    <React.Fragment>\r\n      <Button\r\n        label=\"Discard Changes\"\r\n        icon=\"pi pi-times\"\r\n        className=\"p-button-text\"\r\n        onClick={hideDialog}\r\n      />\r\n      <Button\r\n        label=\"Save Meter Data\"\r\n        icon=\"pi pi-check\"\r\n        className=\"p-button-text\"\r\n        onClick={() => saveMeter()}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const deleteMeterDialogFooter = (\r\n    <React.Fragment>\r\n      <Button\r\n        label=\"No\"\r\n        icon=\"pi pi-times\"\r\n        className=\"p-button-text\"\r\n        onClick={hideDeleteMeterDialog}\r\n      />\r\n      <Button\r\n        label=\"Yes\"\r\n        icon=\"pi pi-check\"\r\n        className=\"p-button-text\"\r\n        onClick={deleteProduct}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const deleteMetersDialogFooter = (\r\n    <React.Fragment>\r\n      <Button\r\n        label=\"No\"\r\n        icon=\"pi pi-times\"\r\n        className=\"p-button-text\"\r\n        onClick={hideDeleteMetersDialog}\r\n      />\r\n      <Button\r\n        label=\"Yes\"\r\n        icon=\"pi pi-check\"\r\n        className=\"p-button-text\"\r\n        onClick={deleteSelectedProducts}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className=\"datatable-crud-demo\">\r\n      <Toast ref={toast} />\r\n\r\n      <div className=\"card\">\r\n        <Toolbar\r\n          className=\"p-mb-4\"\r\n          left={leftToolbarTemplate}\r\n          //   right={rightToolbarTemplate}\r\n        ></Toolbar>\r\n\r\n        <DataTable\r\n          ref={dt}\r\n          value={meters}\r\n          selection={selectedMeters}\r\n          onSelectionChange={(e) => setSelectedMeters(e.value)}\r\n          dataKey=\"pk\"\r\n          paginator\r\n          rows={10}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} Meter Data\"\r\n          globalFilter={globalFilter}\r\n          header={header}\r\n        >\r\n          {/* <Column\r\n            selectionMode=\"multiple\"\r\n            headerStyle={{ width: \"3rem\" }}\r\n          ></Column> */}\r\n          <Column field=\"fields.year\" header=\"Year\" sortable></Column>\r\n          <Column field=\"fields.month\" header=\"Month\" sortable></Column>\r\n          <Column body={dateRangeTemplate} header=\"Date Range\"></Column>\r\n          <Column body={downloadTemplate} header=\"Meter Zip file\"></Column>\r\n\r\n          {/* <Column\r\n            field=\"inventoryStatus\"\r\n            header=\"Status\"\r\n            body={TagDemo}\r\n            sortable\r\n          ></Column> */}\r\n\r\n          <Column\r\n            field=\"inventoryStatus\"\r\n            header=\"Process\"\r\n            body={workWithMeterData}\r\n            sortable\r\n          ></Column>\r\n          {/* <Column\r\n            field=\"inventoryStatus\"\r\n            header=\"Process\"\r\n            body={processUploadedMeterData}\r\n            sortable\r\n          ></Column> */}\r\n\r\n          <Column header=\"Delete Meter Data\" body={actionBodyTemplate}></Column>\r\n        </DataTable>\r\n      </div>\r\n\r\n      <Dialog\r\n        visible={meterDialog}\r\n        style={{ width: \"450px\" }}\r\n        contentStyle={{ overflow: \"visible\" }}\r\n        header=\"Add Meter Data\"\r\n        modal\r\n        className=\"p-fluid\"\r\n        footer={meterDialogFooter}\r\n        onHide={hideDialog} // The cross button at right\r\n      >\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"year\" className=\"p-sr-only\">\r\n            Year\r\n          </label>\r\n          <InputText\r\n            id=\"year\"\r\n            type=\"text\"\r\n            placeholder=\"Year\"\r\n            defaultValue={meter.fields.year}\r\n            onChange={(e) => onInputChange(e, \"year\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !meter.fields.year && (\r\n            <small className=\"p-error\">Year is required.</small>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"month\" className=\"p-sr-only\">\r\n            Month\r\n          </label>\r\n          <InputText\r\n            id=\"month\"\r\n            type=\"text\"\r\n            placeholder=\"Month\"\r\n            defaultValue={meter.fields.month}\r\n            onChange={(e) => onInputChange(e, \"month\")}\r\n            required\r\n          />\r\n          {submitted && !meter.fields.month && (\r\n            <small className=\"p-error\">Month is required.</small>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"startDate\">Start Date</label>\r\n          <Calendar\r\n            id=\"startDate\"\r\n            dateFormat=\"dd/mm/yy\"\r\n            value={meter.fields.startDate}\r\n            locale=\"en\"\r\n            onChange={(e) => {\r\n              onDateChange(e, \"startDate\");\r\n            }}\r\n          ></Calendar>\r\n          {submitted && !meter.fields.startDate && (\r\n            <small className=\"p-error\">Start Date is required.</small>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"startDate\">End Date</label>\r\n          <Calendar\r\n            id=\"endDate\"\r\n            dateFormat=\"dd/mm/yy\"\r\n            value={meter.fields.endDate}\r\n            locale=\"en\"\r\n            onChange={(e) => {\r\n              onDateChange(e, \"endDate\");\r\n            }}\r\n          ></Calendar>\r\n          {submitted && !meter.fields.endDate && (\r\n            <small className=\"p-error\">End Date is required.</small>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"zippedMeterFile\" className=\"p-sr-only\">\r\n            Meter Zip File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"zippedMeterFile\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"zippedMeterFile\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !meter.fields.zippedMeterFile && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        {/* // onChange={(evt) => setMeterZippedFile(evt.target.files[0])} */}\r\n\r\n        {/* <div className=\"p-field\">\r\n          <label className=\"p-sr-only\">Year</label>\r\n\r\n          <InputText\r\n            type=\"text\"\r\n            defaultValue={meter.fields.year}\r\n            placeholder=\"Year\"\r\n            onChange={(evt) => setYear(evt.target.value)}\r\n          />\r\n          {submitted && !meter.name && (\r\n            <small className=\"p-error\">Name is required.</small>\r\n          )}\r\n        </div> */}\r\n\r\n        {/* <div className=\"p-field\">\r\n          <label className=\"p-sr-only\">Month</label>\r\n          <InputText\r\n            type=\"text\"\r\n            defaultValue={meter.fields.month}\r\n            placeholder=\"Month\"\r\n            onChange={(evt) => setMonth(evt.target.value)}\r\n          />\r\n        </div> */}\r\n\r\n        {/* <div className=\"p-field\">\r\n          <label className=\"p-sr-only\">Meter Zip File </label>\r\n\r\n          <input\r\n            type=\"file\"\r\n            // defaultValue=\"fff\"\r\n            onChange={(evt) => setMeterZippedFile(evt.target.files[0])}\r\n          />\r\n        </div> */}\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        visible={deleteMeterDialog}\r\n        style={{ width: \"450px\" }}\r\n        header=\"Confirm\"\r\n        modal\r\n        footer={deleteMeterDialogFooter}\r\n        onHide={hideDeleteMeterDialog}\r\n      >\r\n        <div className=\"confirmation-content\">\r\n          <i\r\n            className=\"pi pi-exclamation-triangle p-mr-3\"\r\n            style={{ fontSize: \"2rem\" }}\r\n          />\r\n          {meter && (\r\n            <span>\r\n              Are you sure you want to delete{\" \"}\r\n              <b>{meter.fields.zippedMeterFile}</b>?\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        visible={deleteMetersDialog}\r\n        style={{ width: \"450px\" }}\r\n        header=\"Confirm\"\r\n        modal\r\n        footer={deleteMetersDialogFooter}\r\n        onHide={hideDeleteMetersDialog}\r\n      >\r\n        <div className=\"confirmation-content\">\r\n          <i\r\n            className=\"pi pi-exclamation-triangle p-mr-3\"\r\n            style={{ fontSize: \"2rem\" }}\r\n          />\r\n          {meter && (\r\n            <span>\r\n              Are you sure you want to delete the selected Meter Data?\r\n            </span>\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<DataTableCrudDemo />, rootElement);\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeter.js",["198","199","200","201","202"],"E:\\MDP Project\\mdp-front-end\\src\\FolderStructure.js",["203","204","205","206","207"],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\Tree.js",["208","209"],"import React, { useState, useReducer, useLayoutEffect } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { useDidMountEffect } from \"../utils\";\r\nimport { TreeContext, reducer } from \"./state\";\r\n\r\nimport { StyledTree } from \"./Tree.style.js\";\r\nimport { Folder } from \"./Folder/TreeFolder.js\";\r\nimport { File } from \"./File/TreeFile.js\";\r\n\r\nconst Tree = ({ children, data, onNodeClick, onUpdate }) => {\r\n  const [state, dispatch] = useReducer(reducer, data);\r\n\r\n  useLayoutEffect(() => {\r\n    dispatch({ type: \"SET_DATA\", payload: data });\r\n  }, [data]);\r\n\r\n  useDidMountEffect(() => {\r\n    onUpdate && onUpdate(state);\r\n  }, [state]);\r\n\r\n  const isImparative = data && !children;\r\n\r\n  return (\r\n    <ThemeProvider theme={{ indent: 20 }}>\r\n      <TreeContext.Provider\r\n        value={{\r\n          isImparative,\r\n          state,\r\n          dispatch,\r\n          onNodeClick: (node) => {\r\n            onNodeClick && onNodeClick(node);\r\n          },\r\n        }}\r\n      >\r\n        <StyledTree>\r\n          {isImparative ? (\r\n            <TreeRecusive data={state} parentNode={state} />\r\n          ) : (\r\n            children\r\n          )}\r\n        </StyledTree>\r\n      </TreeContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst TreeRecusive = ({ data, parentNode }) => {\r\n  return data.map((item) => {\r\n    item.parentNode = parentNode;\r\n    if (!parentNode) {\r\n      item.parentNode = data;\r\n    }\r\n    if (!item.id) item.id = v4();\r\n\r\n    if (item.type === \"file\") {\r\n      return <File key={item.id} id={item.id} name={item.name} node={item} />;\r\n    }\r\n    if (item.type === \"folder\") {\r\n      return (\r\n        <Folder key={item.id} id={item.id} name={item.name} node={item}>\r\n          <TreeRecusive parentNode={item} data={item.files} />\r\n        </Folder>\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nTree.File = File;\r\nTree.Folder = Folder;\r\n\r\nexport default Tree;\r\n","E:\\MDP Project\\mdp-front-end\\src\\Tree\\Tree.style.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.js",["210","211","212","213","214","215","216","217","218"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AiOutlineFolderAdd,\r\n  AiOutlineFileAdd,\r\n  AiOutlineFolder,\r\n  AiOutlineFolderOpen,\r\n  AiOutlineDelete,\r\n  AiOutlineEdit,\r\n} from \"react-icons/ai\";\r\n\r\nimport {\r\n  ActionsWrapper,\r\n  Collapse,\r\n  StyledName,\r\n  VerticalLine,\r\n} from \"../Tree.style\";\r\nimport { StyledFolder } from \"./TreeFolder.style\";\r\n\r\nimport { FILE, FOLDER } from \"../state/constants\";\r\nimport { useTreeContext } from \"../state/TreeContext\";\r\nimport { PlaceholderInput } from \"../TreePlaceholderInput\";\r\n\r\nconst FolderName = ({ isOpen, name, handleClick }) => (\r\n  <StyledName onClick={handleClick}>\r\n    {isOpen ? <AiOutlineFolderOpen /> : <AiOutlineFolder />}\r\n    &nbsp;&nbsp;{name}\r\n  </StyledName>\r\n);\r\n\r\nconst Folder = ({ id, name, children, node }) => {\r\n  const { dispatch, isImparative, onNodeClick } = useTreeContext();\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [childs, setChilds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setChilds([children]);\r\n  }, [children]);\r\n\r\n  const commitFolderCreation = (name) => {\r\n    dispatch({ type: FOLDER.CREATE, payload: { id, name } });\r\n  };\r\n  const commitFileCreation = (name) => {\r\n    dispatch({ type: FILE.CREATE, payload: { id, name } });\r\n  };\r\n  const commitDeleteFolder = () => {\r\n    dispatch({ type: FOLDER.DELETE, payload: { id } });\r\n  };\r\n  const commitFolderEdit = (name) => {\r\n    dispatch({ type: FOLDER.EDIT, payload: { id, name } });\r\n    setEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n    setChilds([children]);\r\n  };\r\n\r\n  const handleNodeClick = React.useCallback(\r\n    (event) => {\r\n      event.stopPropagation();\r\n      onNodeClick({ node });\r\n    },\r\n    [node]\r\n  );\r\n\r\n  const handleFileCreation = (event) => {\r\n    event.stopPropagation();\r\n    setIsOpen(true);\r\n    setChilds([\r\n      ...childs,\r\n      <PlaceholderInput\r\n        type=\"file\"\r\n        onSubmit={commitFileCreation}\r\n        onCancel={handleCancel}\r\n      />,\r\n    ]);\r\n  };\r\n\r\n  const handleFolderCreation = (event) => {\r\n    event.stopPropagation();\r\n    setIsOpen(true);\r\n    setChilds([\r\n      ...childs,\r\n      <PlaceholderInput\r\n        type=\"folder\"\r\n        onSubmit={commitFolderCreation}\r\n        onCancel={handleCancel}\r\n      />,\r\n    ]);\r\n  };\r\n\r\n  const handleFolderRename = () => {\r\n    setIsOpen(true);\r\n    setEditing(true);\r\n  };\r\n\r\n  return (\r\n    <StyledFolder id={id} onClick={handleNodeClick} className=\"tree__folder\">\r\n      <VerticalLine>\r\n        <ActionsWrapper>\r\n          {isEditing ? (\r\n            <PlaceholderInput\r\n              type=\"folder\"\r\n              style={{ paddingLeft: 0 }}\r\n              defaultValue={name}\r\n              onCancel={handleCancel}\r\n              onSubmit={commitFolderEdit}\r\n            />\r\n          ) : (\r\n            <FolderName\r\n              name={name}\r\n              isOpen={isOpen}\r\n              handleClick={() => setIsOpen(!isOpen)}\r\n            />\r\n          )}\r\n\r\n          {isImparative && (\r\n            <div className=\"actions\">\r\n              {/* <AiOutlineEdit onClick={handleFolderRename} />\r\n              <AiOutlineFileAdd onClick={handleFileCreation} />\r\n              <AiOutlineFolderAdd onClick={handleFolderCreation} />\r\n              <AiOutlineDelete onClick={commitDeleteFolder} /> */}\r\n            </div>\r\n          )}\r\n        </ActionsWrapper>\r\n        <Collapse className=\"tree__folder--collapsible\" isOpen={isOpen}>\r\n          {childs}\r\n        </Collapse>\r\n      </VerticalLine>\r\n    </StyledFolder>\r\n  );\r\n};\r\n\r\nexport { Folder, FolderName };\r\n","E:\\MDP Project\\mdp-front-end\\src\\Tree\\File\\TreeFile.js",["219","220","221","222","223"],"import React, { useRef, useState } from \"react\";\r\nimport { AiOutlineFile, AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\r\n\r\nimport { StyledFile } from \"./TreeFile.style\";\r\nimport { useTreeContext } from \"../state/TreeContext\";\r\nimport { ActionsWrapper, StyledName } from \"../Tree.style.js\";\r\nimport { PlaceholderInput } from \"../TreePlaceholderInput\";\r\n\r\nimport { FILE } from \"../state/constants\";\r\nimport FILE_ICONS from \"../FileIcons\";\r\n\r\nconst File = ({ name, id, node }) => {\r\n  const { dispatch, isImparative, onNodeClick } = useTreeContext();\r\n  const [isEditing, setEditing] = useState(false);\r\n  const ext = useRef(\"\");\r\n\r\n  let splitted = name?.split(\".\");\r\n  ext.current = splitted[splitted.length - 1];\r\n\r\n  const toggleEditing = () => setEditing(!isEditing);\r\n  const commitEditing = (name) => {\r\n    dispatch({ type: FILE.EDIT, payload: { id, name } });\r\n    setEditing(false);\r\n  };\r\n  const commitDelete = (event) => {\r\n    // console.log(event);\r\n    // dispatch({ type: FILE.DELETE, payload: { id } });\r\n  };\r\n  const handleNodeClick = React.useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      onNodeClick({ node });\r\n    },\r\n    [node]\r\n  );\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <StyledFile onClick={handleNodeClick} className=\"tree__file\">\r\n      {isEditing ? (\r\n        <PlaceholderInput\r\n          type=\"file\"\r\n          style={{ paddingLeft: 0 }}\r\n          defaultValue={name}\r\n          onSubmit={commitEditing}\r\n          onCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <ActionsWrapper>\r\n          <StyledName>\r\n            {FILE_ICONS[ext.current] ? (\r\n              FILE_ICONS[ext.current]\r\n            ) : (\r\n              <AiOutlineFile />\r\n            )}\r\n            &nbsp;&nbsp;{name}\r\n          </StyledName>\r\n          {isImparative && (\r\n            <div className=\"actions\">\r\n              {/* <AiOutlineEdit onClick={toggleEditing} />\r\n              <AiOutlineDelete onClick={commitDelete} /> */}\r\n            </div>\r\n          )}\r\n        </ActionsWrapper>\r\n      )}\r\n    </StyledFile>\r\n  );\r\n};\r\n\r\nexport { File };\r\n","E:\\MDP Project\\mdp-front-end\\src\\utils.js",["224","225"],"import { useRef, useEffect } from \"react\";\r\n\r\n// @deprecated\r\nexport const findNodeById = (nodes, id) => {\r\n  let final;\r\n\r\n  function findNode(nodes, id) {\r\n    nodes.forEach((n) => {\r\n      if (n.id === id) {\r\n        final = n;\r\n        return;\r\n      }\r\n      if (n.files) findNode(n.files, id);\r\n    });\r\n  }\r\n\r\n  findNode(nodes, id);\r\n\r\n  return final;\r\n};\r\n\r\nexport const searchDFS = ({ data, cond, childPathKey = \"files\" }) => {\r\n  let final = null;\r\n  let parentPath = [];\r\n  let parent = null;\r\n  let next = null;\r\n  let prev = null;\r\n\r\n  const recursiveFind = (tree) => {\r\n    tree.forEach((item, index) => {\r\n      if (cond(item, index)) {\r\n        final = item;\r\n\r\n        if (parentPath) {\r\n          parentPath.forEach((p) => {\r\n            // check if parent has the `current item`\r\n            if (p && p[childPathKey].includes(item)) {\r\n              parent = p;\r\n              // set next & previous indexes\r\n              next = p[childPathKey][index + 1];\r\n              prev = p[childPathKey][index - 1];\r\n            } else {\r\n              parent = tree;\r\n              // if parent is null then check the root of the tree\r\n              next = tree[index + 1];\r\n              prev = tree[index - 1];\r\n            }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      if (item[childPathKey]) {\r\n        // push parent stack\r\n        parentPath.push(item);\r\n        recursiveFind(item[childPathKey]);\r\n      }\r\n    });\r\n  };\r\n\r\n  recursiveFind(data);\r\n  return {\r\n    parent,\r\n    item: final,\r\n    nextSibling: next,\r\n    previousSibling: prev,\r\n  };\r\n};\r\n\r\nexport const useDidMountEffect = (func, deps) => {\r\n  const didMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) func();\r\n    else didMount.current = true;\r\n  }, deps);\r\n};\r\n\r\nexport const createFile = ({ name }) => ({ name, type: \"file\" });\r\nexport const createFolder = ({ name }) => ({ name, type: \"folder\", files: [] });\r\n","E:\\MDP Project\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.style.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\File\\TreeFile.style.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\TreePlaceholderInput.js",["226"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { AiOutlineFile } from \"react-icons/ai\";\r\n\r\nimport FILE_ICONS from \"./FileIcons\";\r\nimport { StyledFile } from \"./File/TreeFile.style\";\r\nimport { FolderName } from \"./Folder/TreeFolder\";\r\nimport { StyledFolder } from \"./Folder/TreeFolder.style\";\r\n\r\nconst FileEdit = ({ ext, inputRef, updateExt, defaultValue, style }) => {\r\n  const extension = FILE_ICONS[ext] ? FILE_ICONS[ext] : <AiOutlineFile />;\r\n\r\n  return (\r\n    <StyledFile className=\"tree__file\" style={style}>\r\n      {extension}\r\n      &nbsp;&nbsp;\r\n      <input\r\n        ref={inputRef}\r\n        onChange={updateExt}\r\n        defaultValue={defaultValue}\r\n        className=\"tree__input\"\r\n      />\r\n    </StyledFile>\r\n  );\r\n};\r\n\r\nconst FolderEdit = ({ name, inputRef, defaultValue, style }) => {\r\n  return (\r\n    <StyledFolder id={v4()} name={name} style={style}>\r\n      <FolderName\r\n        isOpen={true}\r\n        handleClick={() => {}}\r\n        name={\r\n          <input\r\n            ref={inputRef}\r\n            className=\"tree__input\"\r\n            defaultValue={defaultValue}\r\n          />\r\n        }\r\n      />\r\n    </StyledFolder>\r\n  );\r\n};\r\n\r\nconst PlaceholderInput = ({\r\n  type,\r\n  name,\r\n  onSubmit,\r\n  onCancel,\r\n  defaultValue,\r\n  style,\r\n}) => {\r\n  const [ext, setExt] = useState(\"\");\r\n  const inputRef = useRef();\r\n\r\n  const updateExt = (e) => {\r\n    let splitted = e.target.value.split(\".\");\r\n    let ext = splitted && splitted[splitted.length - 1];\r\n    setExt(ext);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!inputRef.current) return;\r\n    inputRef.current.focus();\r\n    inputRef.current.addEventListener(\"keyup\", (e) => {\r\n      if (e.key === \"Enter\") onSubmit(e.target.value);\r\n      if (e.key === \"Escape\") {\r\n        onCancel && onCancel();\r\n      }\r\n    });\r\n  }, [inputRef]);\r\n\r\n  return type === \"file\" ? (\r\n    <FileEdit\r\n      ext={ext}\r\n      style={style}\r\n      updateExt={updateExt}\r\n      inputRef={inputRef}\r\n      defaultValue={defaultValue}\r\n    />\r\n  ) : (\r\n    <FolderEdit\r\n      style={style}\r\n      name={name}\r\n      inputRef={inputRef}\r\n      defaultValue={defaultValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport { PlaceholderInput };\r\n","E:\\MDP Project\\mdp-front-end\\src\\Tree\\FileIcons.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\constants.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\TreeContext.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\index.js",[],"E:\\MDP Project\\mdp-front-end\\src\\Tree\\state\\reducer.js",[],"E:\\MDP Project\\mdp-front-end\\src\\SidebarActions.js",[],"E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMerge.js",["227","228","229","230","231","232","233","234"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\n// import FolderStructure from \"../FolderStructure\";\r\n// import { Tag } from \"primereact/tag\";\r\nimport { Sidebar } from \"primereact/sidebar\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n  const [mergedFile, setMergedFile] = useState(null);\r\n  const [nodeName, setNodeName] = useState(null);\r\n  const [nodeId, setNodeId] = useState(null);\r\n  const [visibleRight, setVisibleRight] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n  const toast = useRef(null);\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    setFileToUpload(e.target.files[0]);\r\n  };\r\n  const MergedFile = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setNodeName(mergedFile.fields.fileName);\r\n            setNodeId(mergedFile.pk);\r\n            setVisibleRight(true);\r\n            setSubmitted(false);\r\n          }}\r\n          label={mergedFile.fields.fileName}\r\n          className=\"p-button-link\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fifteenmmdp/getMergedFile/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length == 1) {\r\n          setMergedFile(result[0]);\r\n        }\r\n        console.log(result.length);\r\n      });\r\n  }, []);\r\n  const saveFile = () => {\r\n    setSubmitted(true);\r\n    setVisibleRight(false);\r\n    if (fileToUpload) {\r\n      const uploadData = new FormData();\r\n\r\n      uploadData.append(\"fileToUpload\", fileToUpload, fileToUpload.name);\r\n      console.log(uploadData);\r\n      axios\r\n        .post(\r\n          \"http://127.0.0.1:8000/fifteenmmdp/changeMergedFile/\" + nodeId,\r\n          uploadData\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Unsuccessful\",\r\n            detail: \"Some error occured\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      console.log(nodeId);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n\r\n      <Sidebar\r\n        visible={visibleRight}\r\n        position=\"right\"\r\n        baseZIndex={1000000}\r\n        onHide={() => {\r\n          setSubmitted(false);\r\n          setVisibleRight(false);\r\n        }}\r\n      >\r\n        <h5 style={{ fontWeight: \"normal\" }}>\r\n          Change Merged File\r\n          <br />\r\n          <a\r\n            href={\r\n              \"http://127.0.0.1:8000/fifteenmmdp/downloadMergedFile/\" + nodeId\r\n            }\r\n            download={\r\n              \"http://127.0.0.1:8000/fifteenmmdp/downloadMergedFile/\" + nodeId\r\n            }\r\n          >\r\n            {\" \"}\r\n            {nodeName}{\" \"}\r\n          </a>\r\n        </h5>\r\n        <br />\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"fileToUpload\" className=\"p-sr-only\">\r\n            Merged File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"fileToUpload\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"fileToUpload\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !fileToUpload && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => saveFile()}\r\n          label=\"Save\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".25em\" }}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSubmitted(false);\r\n            setVisibleRight(false);\r\n          }}\r\n          label=\"Cancel\"\r\n          className=\"p-button-secondary\"\r\n        />\r\n      </Sidebar>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Merged File\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : mergedFile ? (\r\n            <MergedFile />\r\n          ) : (\r\n            \"Not Merged yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Merge\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterExtract.js",["235","236","237","238","239","240","241","242","243"],"E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterValidate.js",["244","245","246","247","248","249","250","251"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Sidebar } from \"primereact/sidebar\";\r\nimport { Toast } from \"primereact/toast\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  const [validatedFile, setValidatedFile] = useState(null);\r\n  const [nodeName, setNodeName] = useState(null);\r\n  const [nodeId, setNodeId] = useState(null);\r\n  const [visibleRight, setVisibleRight] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n  const toast = useRef(null);\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    setFileToUpload(e.target.files[0]);\r\n  };\r\n  const ValidatedFile = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setNodeName(validatedFile.fields.fileName);\r\n            setNodeId(validatedFile.pk);\r\n            setVisibleRight(true);\r\n            setSubmitted(false);\r\n          }}\r\n          label={validatedFile.fields.fileName}\r\n          className=\"p-button-link\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fifteenmmdp/getValidatedFile/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length == 1) {\r\n          setValidatedFile(result[0]);\r\n        }\r\n        console.log(result.length);\r\n      });\r\n  }, []);\r\n  const saveFile = () => {\r\n    setSubmitted(true);\r\n    setVisibleRight(false);\r\n    if (fileToUpload) {\r\n      const uploadData = new FormData();\r\n\r\n      uploadData.append(\"fileToUpload\", fileToUpload, fileToUpload.name);\r\n      console.log(uploadData);\r\n      axios\r\n        .post(\r\n          \"http://127.0.0.1:8000/fifteenmmdp/changeValidatedFile/\" + nodeId,\r\n          uploadData\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Unsuccessful\",\r\n            detail: \"Some error occured\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      console.log(nodeId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <Sidebar\r\n        visible={visibleRight}\r\n        position=\"right\"\r\n        baseZIndex={1000000}\r\n        onHide={() => {\r\n          setSubmitted(false);\r\n          setVisibleRight(false);\r\n        }}\r\n      >\r\n        <h5 style={{ fontWeight: \"normal\" }}>\r\n          Change Validated File\r\n          <br />\r\n          <a\r\n            href={\r\n              \"http://127.0.0.1:8000/fifteenmmdp/downloadValidatedFile/\" +\r\n              nodeId\r\n            }\r\n            download={\r\n              \"http://127.0.0.1:8000/fifteenmmdp/downloadValidatedFile/\" +\r\n              nodeId\r\n            }\r\n          >\r\n            {\" \"}\r\n            {nodeName}{\" \"}\r\n          </a>\r\n        </h5>\r\n        <br />\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"fileToUpload\" className=\"p-sr-only\">\r\n            Validated File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"fileToUpload\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"fileToUpload\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !fileToUpload && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => saveFile()}\r\n          label=\"Save\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".25em\" }}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSubmitted(false);\r\n            setVisibleRight(false);\r\n          }}\r\n          label=\"Cancel\"\r\n          className=\"p-button-secondary\"\r\n        />\r\n      </Sidebar>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Date Filtered File Validated\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : validatedFile ? (\r\n            <ValidatedFile />\r\n          ) : (\r\n            \"Not Validated yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Validate\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFinalOutput.js",["252","253","254","255","256","257","258","259","260","261","262"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fmmdp/getMeterData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // setMeter(result[0]);\r\n        console.log(result);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-col\">\r\n      <Fieldset legend=\"Final Output\" toggleable>\r\n        Not processed yet\r\n      </Fieldset>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFict.js",["263","264","265","266","267","268","269","270","271","272","273"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fmmdp/getMeterData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // setMeter(result[0]);\r\n        console.log(result);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-col\">\r\n      <Fieldset legend=\"Fictitious Meter MWH\" toggleable>\r\n        Not processed yet\r\n      </Fieldset>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterAnalyse.js",["274","275","276","277","278","279","280","281","282","283","284"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fmmdp/getMeterData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // setMeter(result[0]);\r\n        console.log(result);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-col\">\r\n      <Fieldset legend=\"Analyse\" toggleable>\r\n        Not processed yet\r\n      </Fieldset>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterDateFilter.js",["285","286","287","288","289","290","291","292","293"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Sidebar } from \"primereact/sidebar\";\r\nimport { Toast } from \"primereact/toast\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  const [dateFilteredFile, setDateFilteredFile] = useState(null);\r\n  const [nodeName, setNodeName] = useState(null);\r\n  const [nodeId, setNodeId] = useState(null);\r\n  const [visibleRight, setVisibleRight] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n  const toast = useRef(null);\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    setFileToUpload(e.target.files[0]);\r\n  };\r\n  const DateFilteredFile = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setNodeName(dateFilteredFile.fields.fileName);\r\n            setNodeId(dateFilteredFile.pk);\r\n            setVisibleRight(true);\r\n            setSubmitted(false);\r\n          }}\r\n          label={dateFilteredFile.fields.fileName}\r\n          className=\"p-button-link\"\r\n        />{\" \"}\r\n        <a\r\n          href={\r\n            \"http://127.0.0.1:8000/fifteenmmdp/downloadNrxFile/\" + meterIdParam\r\n          }\r\n        >\r\n          <Button label=\"NRX File\" className=\"p-button-link\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetch(\r\n      \"http://127.0.0.1:8000/fifteenmmdp/getDateFilteredFile/\" + meterIdParam\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length == 1) {\r\n          setDateFilteredFile(result[0]);\r\n        }\r\n        console.log(result.length);\r\n      });\r\n  }, []);\r\n  const saveFile = () => {\r\n    setSubmitted(true);\r\n    setVisibleRight(false);\r\n    if (fileToUpload) {\r\n      const uploadData = new FormData();\r\n\r\n      uploadData.append(\"fileToUpload\", fileToUpload, fileToUpload.name);\r\n      console.log(uploadData);\r\n      axios\r\n        .post(\r\n          \"http://127.0.0.1:8000/fifteenmmdp/changeDateFilteredFile/\" + nodeId,\r\n          uploadData\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Unsuccessful\",\r\n            detail: \"Some error occured\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      console.log(nodeId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <Sidebar\r\n        visible={visibleRight}\r\n        position=\"right\"\r\n        baseZIndex={1000000}\r\n        onHide={() => {\r\n          setSubmitted(false);\r\n          setVisibleRight(false);\r\n        }}\r\n      >\r\n        <h5 style={{ fontWeight: \"normal\" }}>\r\n          Change Date Filtered File\r\n          <br />\r\n          <a\r\n            href={\r\n              \"http://127.0.0.1:8000/fifteenmmdp/downloadDateFilteredFile/\" +\r\n              nodeId\r\n            }\r\n            download={\r\n              \"http://127.0.0.1:8000/fifteenmmdp/downloadDateFilteredFile/\" +\r\n              nodeId\r\n            }\r\n          >\r\n            {\" \"}\r\n            {nodeName}{\" \"}\r\n          </a>\r\n        </h5>\r\n        <br />\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"fileToUpload\" className=\"p-sr-only\">\r\n            Date Filtered File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"fileToUpload\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"fileToUpload\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !fileToUpload && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => saveFile()}\r\n          label=\"Save\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".25em\" }}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSubmitted(false);\r\n            setVisibleRight(false);\r\n          }}\r\n          label=\"Cancel\"\r\n          className=\"p-button-secondary\"\r\n        />\r\n      </Sidebar>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Merged File Date Filtered\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : dateFilteredFile ? (\r\n            <DateFilteredFile />\r\n          ) : (\r\n            \"Not Date Filtered yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Date Filter\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\MDP Project\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMWH.js",["294","295","296","297","298","299","300","301","302"],{"ruleId":"303","severity":1,"message":"304","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"307","line":1,"column":27,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"308","line":3,"column":8,"nodeType":"305","messageId":"306","endLine":3,"endColumn":22},{"ruleId":"303","severity":1,"message":"309","line":4,"column":8,"nodeType":"305","messageId":"306","endLine":4,"endColumn":22},{"ruleId":"303","severity":1,"message":"310","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":17},{"ruleId":"303","severity":1,"message":"311","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":16},{"ruleId":"303","severity":1,"message":"312","line":8,"column":27,"nodeType":"305","messageId":"306","endLine":8,"endColumn":33},{"ruleId":"303","severity":1,"message":"313","line":8,"column":35,"nodeType":"305","messageId":"306","endLine":8,"endColumn":41},{"ruleId":"303","severity":1,"message":"314","line":8,"column":43,"nodeType":"305","messageId":"306","endLine":8,"endColumn":48},{"ruleId":"303","severity":1,"message":"315","line":8,"column":50,"nodeType":"305","messageId":"306","endLine":8,"endColumn":54},{"ruleId":"303","severity":1,"message":"316","line":9,"column":8,"nodeType":"305","messageId":"306","endLine":9,"endColumn":22},{"ruleId":"303","severity":1,"message":"317","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":16},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"303","severity":1,"message":"317","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":16},{"ruleId":"303","severity":1,"message":"322","line":11,"column":10,"nodeType":"305","messageId":"306","endLine":11,"endColumn":18},{"ruleId":"303","severity":1,"message":"323","line":12,"column":10,"nodeType":"305","messageId":"306","endLine":12,"endColumn":21},{"ruleId":"303","severity":1,"message":"324","line":13,"column":10,"nodeType":"305","messageId":"306","endLine":13,"endColumn":18},{"ruleId":"303","severity":1,"message":"325","line":14,"column":10,"nodeType":"305","messageId":"306","endLine":14,"endColumn":23},{"ruleId":"303","severity":1,"message":"326","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":20},{"ruleId":"303","severity":1,"message":"327","line":1,"column":38,"nodeType":"305","messageId":"306","endLine":1,"endColumn":53},{"ruleId":"303","severity":1,"message":"328","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":17},{"ruleId":"303","severity":1,"message":"329","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":16},{"ruleId":"303","severity":1,"message":"316","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":22},{"ruleId":"303","severity":1,"message":"330","line":13,"column":10,"nodeType":"305","messageId":"306","endLine":13,"endColumn":18},{"ruleId":"303","severity":1,"message":"331","line":15,"column":10,"nodeType":"305","messageId":"306","endLine":15,"endColumn":22},{"ruleId":"303","severity":1,"message":"332","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":18},{"ruleId":"303","severity":1,"message":"333","line":17,"column":10,"nodeType":"305","messageId":"306","endLine":17,"endColumn":18},{"ruleId":"303","severity":1,"message":"334","line":21,"column":10,"nodeType":"305","messageId":"306","endLine":21,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":7935,"column":6,"nodeType":"337","endLine":7935,"endColumn":8,"suggestions":"338"},{"ruleId":"303","severity":1,"message":"339","line":7937,"column":9,"nodeType":"305","messageId":"306","endLine":7937,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":7965,"column":24,"nodeType":"342","messageId":"343","endLine":7965,"endColumn":26},{"ruleId":"303","severity":1,"message":"344","line":7984,"column":9,"nodeType":"305","messageId":"306","endLine":7984,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"303","severity":1,"message":"307","line":1,"column":27,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"345","line":1,"column":38,"nodeType":"305","messageId":"306","endLine":1,"endColumn":44},{"ruleId":"303","severity":1,"message":"346","line":3,"column":3,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"315","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":7},{"ruleId":"303","severity":1,"message":"316","line":11,"column":8,"nodeType":"305","messageId":"306","endLine":11,"endColumn":22},{"ruleId":"303","severity":1,"message":"347","line":33,"column":10,"nodeType":"305","messageId":"306","endLine":33,"endColumn":14},{"ruleId":"303","severity":1,"message":"317","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":16},{"ruleId":"303","severity":1,"message":"348","line":11,"column":8,"nodeType":"305","messageId":"306","endLine":11,"endColumn":18},{"ruleId":"303","severity":1,"message":"326","line":16,"column":10,"nodeType":"305","messageId":"306","endLine":16,"endColumn":20},{"ruleId":"303","severity":1,"message":"349","line":17,"column":10,"nodeType":"305","messageId":"306","endLine":17,"endColumn":16},{"ruleId":"303","severity":1,"message":"325","line":19,"column":10,"nodeType":"305","messageId":"306","endLine":19,"endColumn":23},{"ruleId":"303","severity":1,"message":"323","line":20,"column":10,"nodeType":"305","messageId":"306","endLine":20,"endColumn":21},{"ruleId":"303","severity":1,"message":"350","line":21,"column":10,"nodeType":"305","messageId":"306","endLine":21,"endColumn":21},{"ruleId":"303","severity":1,"message":"324","line":24,"column":10,"nodeType":"305","messageId":"306","endLine":24,"endColumn":18},{"ruleId":"303","severity":1,"message":"351","line":67,"column":9,"nodeType":"305","messageId":"306","endLine":67,"endColumn":15},{"ruleId":"340","severity":1,"message":"352","line":141,"column":32,"nodeType":"342","messageId":"343","endLine":141,"endColumn":34},{"ruleId":"340","severity":1,"message":"352","line":142,"column":33,"nodeType":"342","messageId":"343","endLine":142,"endColumn":35},{"ruleId":"303","severity":1,"message":"353","line":196,"column":9,"nodeType":"305","messageId":"306","endLine":196,"endColumn":18},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"310","line":13,"column":8,"nodeType":"305","messageId":"306","endLine":13,"endColumn":17},{"ruleId":"303","severity":1,"message":"354","line":17,"column":8,"nodeType":"305","messageId":"306","endLine":17,"endColumn":23},{"ruleId":"335","severity":1,"message":"355","line":169,"column":6,"nodeType":"337","endLine":169,"endColumn":8,"suggestions":"356"},{"ruleId":"303","severity":1,"message":"327","line":1,"column":38,"nodeType":"305","messageId":"306","endLine":1,"endColumn":53},{"ruleId":"303","severity":1,"message":"316","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":22},{"ruleId":"303","severity":1,"message":"357","line":25,"column":16,"nodeType":"305","messageId":"306","endLine":25,"endColumn":23},{"ruleId":"335","severity":1,"message":"358","line":44,"column":6,"nodeType":"337","endLine":44,"endColumn":8,"suggestions":"359"},{"ruleId":"340","severity":1,"message":"341","line":87,"column":24,"nodeType":"342","messageId":"343","endLine":87,"endColumn":26},{"ruleId":"303","severity":1,"message":"304","line":1,"column":17,"nodeType":"305","messageId":"306","endLine":1,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":50,"column":26,"nodeType":"362","messageId":"363","endLine":50,"endColumn":28},{"ruleId":"303","severity":1,"message":"364","line":3,"column":3,"nodeType":"305","messageId":"306","endLine":3,"endColumn":21},{"ruleId":"303","severity":1,"message":"365","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":19},{"ruleId":"303","severity":1,"message":"366","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":18},{"ruleId":"303","severity":1,"message":"367","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"368","line":46,"column":9,"nodeType":"305","messageId":"306","endLine":46,"endColumn":27},{"ruleId":"335","severity":1,"message":"369","line":64,"column":5,"nodeType":"337","endLine":64,"endColumn":11,"suggestions":"370"},{"ruleId":"303","severity":1,"message":"371","line":67,"column":9,"nodeType":"305","messageId":"306","endLine":67,"endColumn":27},{"ruleId":"303","severity":1,"message":"372","line":80,"column":9,"nodeType":"305","messageId":"306","endLine":80,"endColumn":29},{"ruleId":"303","severity":1,"message":"373","line":93,"column":9,"nodeType":"305","messageId":"306","endLine":93,"endColumn":27},{"ruleId":"303","severity":1,"message":"366","line":2,"column":25,"nodeType":"305","messageId":"306","endLine":2,"endColumn":40},{"ruleId":"303","severity":1,"message":"367","line":2,"column":42,"nodeType":"305","messageId":"306","endLine":2,"endColumn":55},{"ruleId":"303","severity":1,"message":"374","line":20,"column":9,"nodeType":"305","messageId":"306","endLine":20,"endColumn":22},{"ruleId":"303","severity":1,"message":"375","line":25,"column":9,"nodeType":"305","messageId":"306","endLine":25,"endColumn":21},{"ruleId":"335","severity":1,"message":"369","line":34,"column":5,"nodeType":"337","endLine":34,"endColumn":11,"suggestions":"376"},{"ruleId":"335","severity":1,"message":"377","line":75,"column":6,"nodeType":"305","endLine":75,"endColumn":10},{"ruleId":"335","severity":1,"message":"378","line":75,"column":6,"nodeType":"305","endLine":75,"endColumn":10,"suggestions":"379"},{"ruleId":"335","severity":1,"message":"380","line":71,"column":6,"nodeType":"337","endLine":71,"endColumn":16,"suggestions":"381"},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"383","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"340","severity":1,"message":"341","line":56,"column":27,"nodeType":"342","messageId":"343","endLine":56,"endColumn":29},{"ruleId":"335","severity":1,"message":"384","line":61,"column":6,"nodeType":"337","endLine":61,"endColumn":8,"suggestions":"385"},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"329","line":14,"column":10,"nodeType":"305","messageId":"306","endLine":14,"endColumn":16},{"ruleId":"303","severity":1,"message":"386","line":15,"column":8,"nodeType":"305","messageId":"306","endLine":15,"endColumn":13},{"ruleId":"303","severity":1,"message":"387","line":36,"column":7,"nodeType":"305","messageId":"306","endLine":36,"endColumn":12},{"ruleId":"335","severity":1,"message":"384","line":47,"column":6,"nodeType":"337","endLine":47,"endColumn":8,"suggestions":"388"},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"383","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"340","severity":1,"message":"341","line":55,"column":27,"nodeType":"342","messageId":"343","endLine":55,"endColumn":29},{"ruleId":"335","severity":1,"message":"384","line":60,"column":6,"nodeType":"337","endLine":60,"endColumn":8,"suggestions":"389"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":28,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"383","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"329","line":14,"column":10,"nodeType":"305","messageId":"306","endLine":14,"endColumn":16},{"ruleId":"303","severity":1,"message":"386","line":15,"column":8,"nodeType":"305","messageId":"306","endLine":15,"endColumn":13},{"ruleId":"303","severity":1,"message":"354","line":16,"column":8,"nodeType":"305","messageId":"306","endLine":16,"endColumn":23},{"ruleId":"335","severity":1,"message":"384","line":28,"column":6,"nodeType":"337","endLine":28,"endColumn":8,"suggestions":"390"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":28,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"383","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"329","line":14,"column":10,"nodeType":"305","messageId":"306","endLine":14,"endColumn":16},{"ruleId":"303","severity":1,"message":"386","line":15,"column":8,"nodeType":"305","messageId":"306","endLine":15,"endColumn":13},{"ruleId":"303","severity":1,"message":"354","line":16,"column":8,"nodeType":"305","messageId":"306","endLine":16,"endColumn":23},{"ruleId":"335","severity":1,"message":"384","line":28,"column":6,"nodeType":"337","endLine":28,"endColumn":8,"suggestions":"391"},{"ruleId":"303","severity":1,"message":"304","line":1,"column":28,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"383","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"329","line":14,"column":10,"nodeType":"305","messageId":"306","endLine":14,"endColumn":16},{"ruleId":"303","severity":1,"message":"386","line":15,"column":8,"nodeType":"305","messageId":"306","endLine":15,"endColumn":13},{"ruleId":"303","severity":1,"message":"354","line":16,"column":8,"nodeType":"305","messageId":"306","endLine":16,"endColumn":23},{"ruleId":"335","severity":1,"message":"384","line":28,"column":6,"nodeType":"337","endLine":28,"endColumn":8,"suggestions":"392"},{"ruleId":"303","severity":1,"message":"312","line":3,"column":20,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":4,"column":3,"nodeType":"305","messageId":"306","endLine":4,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":5,"column":3,"nodeType":"305","messageId":"306","endLine":5,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":7,"column":3,"nodeType":"305","messageId":"306","endLine":7,"endColumn":11},{"ruleId":"303","severity":1,"message":"383","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":16},{"ruleId":"303","severity":1,"message":"354","line":16,"column":8,"nodeType":"305","messageId":"306","endLine":16,"endColumn":23},{"ruleId":"340","severity":1,"message":"341","line":65,"column":27,"nodeType":"342","messageId":"343","endLine":65,"endColumn":29},{"ruleId":"335","severity":1,"message":"384","line":70,"column":6,"nodeType":"337","endLine":70,"endColumn":8,"suggestions":"393"},{"ruleId":"303","severity":1,"message":"312","line":41,"column":20,"nodeType":"305","messageId":"306","endLine":41,"endColumn":26},{"ruleId":"303","severity":1,"message":"313","line":42,"column":3,"nodeType":"305","messageId":"306","endLine":42,"endColumn":9},{"ruleId":"303","severity":1,"message":"314","line":43,"column":3,"nodeType":"305","messageId":"306","endLine":43,"endColumn":8},{"ruleId":"303","severity":1,"message":"315","line":44,"column":3,"nodeType":"305","messageId":"306","endLine":44,"endColumn":7},{"ruleId":"303","severity":1,"message":"382","line":45,"column":3,"nodeType":"305","messageId":"306","endLine":45,"endColumn":11},{"ruleId":"303","severity":1,"message":"329","line":52,"column":10,"nodeType":"305","messageId":"306","endLine":52,"endColumn":16},{"ruleId":"303","severity":1,"message":"386","line":53,"column":8,"nodeType":"305","messageId":"306","endLine":53,"endColumn":13},{"ruleId":"303","severity":1,"message":"387","line":74,"column":7,"nodeType":"305","messageId":"306","endLine":74,"endColumn":12},{"ruleId":"335","severity":1,"message":"384","line":85,"column":6,"nodeType":"337","endLine":85,"endColumn":8,"suggestions":"394"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FileUploadDemo' is defined but never used.","'FormLayoutDemo' is defined but never used.","'DataTable' is defined but never used.","'TempSave' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'SidebarActions' is defined but never used.","'ReactDOM' is defined but never used.","no-native-reassign",["395"],"no-negated-in-lhs",["396"],"'Checkbox' is defined but never used.","'RadioButton' is defined but never used.","'Dropdown' is defined but never used.","'InputTextarea' is defined but never used.","'FileUpload' is defined but never used.","'useLayoutEffect' is defined but never used.","'Sidebar' is defined but never used.","'Button' is defined but never used.","'fileType' is assigned a value but never used.","'visibleRight' is assigned a value but never used.","'nodePath' is assigned a value but never used.","'nodeName' is assigned a value but never used.","'submitted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.fileType' and 'temp'. Either include them or remove the dependency array. If 'setFileType' needs the current value of 'props.fileType', you can also switch to useReducer instead of useState and read 'props.fileType' in the reducer.","ArrayExpression",["397"],"'saveFile' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onFileChange' is assigned a value but never used.","'useRef' is defined but never used.","'useLocation' is defined but never used.","'Home' is defined but never used.","'classNames' is defined but never used.","'Rating' is defined but never used.","'InputNumber' is defined but never used.","'months' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'editMeter' is assigned a value but never used.","'FolderStructure' is defined but never used.","React Hook useEffect has missing dependencies: 'StatusMap', 'history', and 'meterIdParam'. Either include them or remove the dependency array.",["398"],"'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'FileTypeMap' and 'props.fileType'. Either include them or remove the dependency array. If 'setFileName' needs the current value of 'props.fileType', you can also switch to useReducer instead of useState and read 'props.fileType' in the reducer.",["399"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AiOutlineFolderAdd' is defined but never used.","'AiOutlineFileAdd' is defined but never used.","'AiOutlineDelete' is defined but never used.","'AiOutlineEdit' is defined but never used.","'commitDeleteFolder' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'onNodeClick'. Either include it or remove the dependency array.",["400"],"'handleFileCreation' is assigned a value but never used.","'handleFolderCreation' is assigned a value but never used.","'handleFolderRename' is assigned a value but never used.","'toggleEditing' is assigned a value but never used.","'commitDelete' is assigned a value but never used.",["401"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["402"],"React Hook useEffect has missing dependencies: 'onCancel' and 'onSubmit'. Either include them or remove the dependency array. If 'onSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["403"],"'Redirect' is defined but never used.","'useRouteMatch' is defined but never used.","React Hook useEffect has a missing dependency: 'meterIdParam'. Either include it or remove the dependency array.",["404"],"'axios' is defined but never used.","'match' is assigned a value but never used.",["405"],["406"],["407"],["408"],["409"],["410"],["411"],"no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"418","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"425","fix":"427"},{"desc":"425","fix":"428"},{"desc":"425","fix":"429"},{"desc":"425","fix":"430"},{"desc":"425","fix":"431"},{"desc":"425","fix":"432"},{"desc":"425","fix":"433"},"Update the dependencies array to be: [props.fileType, temp]",{"range":"434","text":"435"},"Update the dependencies array to be: [StatusMap, history, meterIdParam]",{"range":"436","text":"437"},"Update the dependencies array to be: [FileTypeMap, props.fileType]",{"range":"438","text":"439"},"Update the dependencies array to be: [node, onNodeClick]",{"range":"440","text":"441"},{"range":"442","text":"441"},"Update the dependencies array to be: [func]",{"range":"443","text":"444"},"Update the dependencies array to be: [inputRef, onCancel, onSubmit]",{"range":"445","text":"446"},"Update the dependencies array to be: [meterIdParam]",{"range":"447","text":"448"},{"range":"449","text":"448"},{"range":"450","text":"448"},{"range":"451","text":"448"},{"range":"452","text":"448"},{"range":"453","text":"448"},{"range":"454","text":"448"},{"range":"455","text":"448"},[278869,278871],"[props.fileType, temp]",[5210,5212],"[StatusMap, history, meterIdParam]",[1502,1504],"[FileTypeMap, props.fileType]",[1769,1775],"[node, onNodeClick]",[1166,1172],[1774,1778],"[func]",[1830,1840],"[inputRef, onCancel, onSubmit]",[1892,1894],"[meterIdParam]",[1275,1277],[1822,1824],[759,761],[759,761],[759,761],[2130,2132],[2308,2310]]
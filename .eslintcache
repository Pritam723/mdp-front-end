[{"E:\\MDP Project\\mdp-front-end\\src\\index.js":"1","E:\\MDP Project\\mdp-front-end\\src\\App.js":"2","E:\\MDP Project\\mdp-front-end\\src\\reportWebVitals.js":"3","D:\\mdp\\mdp-front-end\\src\\index.js":"4","D:\\mdp\\mdp-front-end\\src\\App.js":"5","D:\\mdp\\mdp-front-end\\src\\reportWebVitals.js":"6","D:\\mdp\\mdp-front-end\\src\\FileUpload.js":"7","D:\\mdp\\mdp-front-end\\src\\FormLayoutDemo.js":"8","D:\\mdp\\mdp-front-end\\src\\DataTable.js":"9","D:\\mdp\\mdp-front-end\\src\\tempSave.js":"10","D:\\mdp\\mdp-front-end\\src\\AppWrapper.js":"11","D:\\mdp\\mdp-front-end\\src\\ParticularMeter.js":"12","D:\\mdp\\mdp-front-end\\src\\FolderStructure.js":"13","D:\\mdp\\mdp-front-end\\src\\Tree\\Tree.js":"14","D:\\mdp\\mdp-front-end\\src\\Tree\\state\\index.js":"15","D:\\mdp\\mdp-front-end\\src\\Tree\\state\\TreeContext.js":"16","D:\\mdp\\mdp-front-end\\src\\Tree\\state\\reducer.js":"17","D:\\mdp\\mdp-front-end\\src\\Tree\\state\\constants.js":"18","D:\\mdp\\mdp-front-end\\src\\Tree\\File\\TreeFile.js":"19","D:\\mdp\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.js":"20","D:\\mdp\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.style.js":"21","D:\\mdp\\mdp-front-end\\src\\Tree\\Tree.style.js":"22","D:\\mdp\\mdp-front-end\\src\\utils.js":"23","D:\\mdp\\mdp-front-end\\src\\Tree\\File\\TreeFile.style.js":"24","D:\\mdp\\mdp-front-end\\src\\Tree\\FileIcons.js":"25","D:\\mdp\\mdp-front-end\\src\\Tree\\TreePlaceholderInput.js":"26","D:\\mdp\\mdp-front-end\\src\\SidebarActions.js":"27","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMerge.js":"28","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterValidate.js":"29","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterExtract.js":"30","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMWH.js":"31","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterDateFilter.js":"32","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFinalOutput.js":"33","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFict.js":"34","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterAnalyse.js":"35","D:\\mdp\\mdp-front-end\\src\\GlobalVars.js":"36","D:\\mdp\\mdp-front-end\\src\\NecessaryFiles.js":"37"},{"size":500,"mtime":499162500000,"results":"38","hashOfConfig":"39"},{"size":528,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":493,"mtime":1614837258226,"results":"42","hashOfConfig":"43"},{"size":2334,"mtime":1608281598617,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1608266237869,"results":"45","hashOfConfig":"43"},{"size":1152,"mtime":1612327939393,"results":"46","hashOfConfig":"43"},{"size":3268,"mtime":1614788621964,"results":"47","hashOfConfig":"43"},{"size":18560,"mtime":1614790709341,"results":"48","hashOfConfig":"43"},{"size":378,"mtime":1614837038845,"results":"49","hashOfConfig":"43"},{"size":1500,"mtime":1614843535646,"results":"50","hashOfConfig":"43"},{"size":10662,"mtime":1614790986133,"results":"51","hashOfConfig":"43"},{"size":5979,"mtime":1614790974245,"results":"52","hashOfConfig":"43"},{"size":1915,"mtime":1614057337933,"results":"53","hashOfConfig":"43"},{"size":95,"mtime":1613041252122,"results":"54","hashOfConfig":"43"},{"size":290,"mtime":1613041252120,"results":"55","hashOfConfig":"43"},{"size":1332,"mtime":1613042245192,"results":"56","hashOfConfig":"43"},{"size":254,"mtime":1613041252121,"results":"57","hashOfConfig":"43"},{"size":2128,"mtime":1614057337918,"results":"58","hashOfConfig":"43"},{"size":3621,"mtime":1614057337933,"results":"59","hashOfConfig":"43"},{"size":225,"mtime":1613041252115,"results":"60","hashOfConfig":"43"},{"size":1423,"mtime":1614057337949,"results":"61","hashOfConfig":"43"},{"size":1937,"mtime":1613041252168,"results":"62","hashOfConfig":"43"},{"size":216,"mtime":1613041252111,"results":"63","hashOfConfig":"43"},{"size":257,"mtime":1613041252112,"results":"64","hashOfConfig":"43"},{"size":2206,"mtime":1613042490210,"results":"65","hashOfConfig":"43"},{"size":2803,"mtime":1614057337902,"results":"66","hashOfConfig":"43"},{"size":4994,"mtime":1614791051641,"results":"67","hashOfConfig":"43"},{"size":4968,"mtime":1614791061627,"results":"68","hashOfConfig":"43"},{"size":2105,"mtime":1614788621963,"results":"69","hashOfConfig":"43"},{"size":4424,"mtime":1614791070325,"results":"70","hashOfConfig":"43"},{"size":5265,"mtime":1614791040654,"results":"71","hashOfConfig":"43"},{"size":4265,"mtime":1614791077679,"results":"72","hashOfConfig":"43"},{"size":4321,"mtime":1614791137879,"results":"73","hashOfConfig":"43"},{"size":906,"mtime":1614788622039,"results":"74","hashOfConfig":"43"},{"size":1101,"mtime":1614851817693,"results":"75","hashOfConfig":"43"},{"size":1463,"mtime":1614925568967,"results":"76","hashOfConfig":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s04f4x",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ylgylm",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MDP Project\\mdp-front-end\\src\\index.js",[],"E:\\MDP Project\\mdp-front-end\\src\\App.js",[],"E:\\MDP Project\\mdp-front-end\\src\\reportWebVitals.js",[],"D:\\mdp\\mdp-front-end\\src\\index.js",["167","168","169","170","171","172","173","174","175","176","177"],"D:\\mdp\\mdp-front-end\\src\\App.js",[],"D:\\mdp\\mdp-front-end\\src\\reportWebVitals.js",[],["178","179"],"D:\\mdp\\mdp-front-end\\src\\FileUpload.js",["180"],"import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport './cssFiles/fileUpload.css';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport React, { useRef } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nexport default function FileUploadDemo() {\r\n    const toast = useRef(null);\r\n\r\n    const onUpload = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={onUpload} multiple accept=\"image/*\" maxFileSize={1000000}\r\n                    emptyTemplate={<p className=\"p-m-0\">Drag and drop files to here to upload.</p>} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                \r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<FileUploadDemo />, rootElement);\r\n",["181","182"],"D:\\mdp\\mdp-front-end\\src\\FormLayoutDemo.js",["183","184","185","186","187","188"],"D:\\mdp\\mdp-front-end\\src\\DataTable.js",["189","190","191","192","193","194","195","196","197","198","199","200"],"D:\\mdp\\mdp-front-end\\src\\tempSave.js",[],"D:\\mdp\\mdp-front-end\\src\\AppWrapper.js",["201","202","203","204","205","206","207","208"],"D:\\mdp\\mdp-front-end\\src\\ParticularMeter.js",["209","210","211","212","213"],"D:\\mdp\\mdp-front-end\\src\\FolderStructure.js",["214","215","216","217"],"D:\\mdp\\mdp-front-end\\src\\Tree\\Tree.js",["218"],"import React, { useState, useReducer, useLayoutEffect } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { useDidMountEffect } from \"../utils\";\r\nimport { TreeContext, reducer } from \"./state\";\r\n\r\nimport { StyledTree } from \"./Tree.style.js\";\r\nimport { Folder } from \"./Folder/TreeFolder.js\";\r\nimport { File } from \"./File/TreeFile.js\";\r\n\r\nconst Tree = ({ children, data, onNodeClick, onUpdate }) => {\r\n  const [state, dispatch] = useReducer(reducer, data);\r\n\r\n  useLayoutEffect(() => {\r\n    dispatch({ type: \"SET_DATA\", payload: data });\r\n  }, [data]);\r\n\r\n  useDidMountEffect(() => {\r\n    onUpdate && onUpdate(state);\r\n  }, [state]);\r\n\r\n  const isImparative = data && !children;\r\n\r\n  return (\r\n    <ThemeProvider theme={{ indent: 20 }}>\r\n      <TreeContext.Provider\r\n        value={{\r\n          isImparative,\r\n          state,\r\n          dispatch,\r\n          onNodeClick: (node) => {\r\n            onNodeClick && onNodeClick(node);\r\n          },\r\n        }}\r\n      >\r\n        <StyledTree>\r\n          {isImparative ? (\r\n            <TreeRecusive data={state} parentNode={state} />\r\n          ) : (\r\n            children\r\n          )}\r\n        </StyledTree>\r\n      </TreeContext.Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst TreeRecusive = ({ data, parentNode }) => {\r\n  return data.map((item) => {\r\n    item.parentNode = parentNode;\r\n    if (!parentNode) {\r\n      item.parentNode = data;\r\n    }\r\n    if (!item.id) item.id = v4();\r\n\r\n    if (item.type === \"file\") {\r\n      return <File key={item.id} id={item.id} name={item.name} node={item} />;\r\n    }\r\n    if (item.type === \"folder\") {\r\n      return (\r\n        <Folder key={item.id} id={item.id} name={item.name} node={item}>\r\n          <TreeRecusive parentNode={item} data={item.files} />\r\n        </Folder>\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nTree.File = File;\r\nTree.Folder = Folder;\r\n\r\nexport default Tree;\r\n","D:\\mdp\\mdp-front-end\\src\\Tree\\state\\index.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\state\\TreeContext.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\state\\reducer.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\state\\constants.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\File\\TreeFile.js",["219"],"import React, { useRef, useState } from \"react\";\r\nimport { AiOutlineFile, AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\r\n\r\nimport { StyledFile } from \"./TreeFile.style\";\r\nimport { useTreeContext } from \"../state/TreeContext\";\r\nimport { ActionsWrapper, StyledName } from \"../Tree.style.js\";\r\nimport { PlaceholderInput } from \"../TreePlaceholderInput\";\r\n\r\nimport { FILE } from \"../state/constants\";\r\nimport FILE_ICONS from \"../FileIcons\";\r\n\r\nconst File = ({ name, id, node }) => {\r\n  const { dispatch, isImparative, onNodeClick } = useTreeContext();\r\n  const [isEditing, setEditing] = useState(false);\r\n  const ext = useRef(\"\");\r\n\r\n  let splitted = name?.split(\".\");\r\n  ext.current = splitted[splitted.length - 1];\r\n\r\n  const toggleEditing = () => setEditing(!isEditing);\r\n  const commitEditing = (name) => {\r\n    dispatch({ type: FILE.EDIT, payload: { id, name } });\r\n    setEditing(false);\r\n  };\r\n  const commitDelete = (event) => {\r\n    // console.log(event);\r\n    // dispatch({ type: FILE.DELETE, payload: { id } });\r\n  };\r\n  const handleNodeClick = React.useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      onNodeClick({ node });\r\n    },\r\n    [node]\r\n  );\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <StyledFile onClick={handleNodeClick} className=\"tree__file\">\r\n      {isEditing ? (\r\n        <PlaceholderInput\r\n          type=\"file\"\r\n          style={{ paddingLeft: 0 }}\r\n          defaultValue={name}\r\n          onSubmit={commitEditing}\r\n          onCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <ActionsWrapper>\r\n          <StyledName>\r\n            {FILE_ICONS[ext.current] ? (\r\n              FILE_ICONS[ext.current]\r\n            ) : (\r\n              <AiOutlineFile />\r\n            )}\r\n            &nbsp;&nbsp;{name}\r\n          </StyledName>\r\n          {isImparative && (\r\n            <div className=\"actions\">\r\n              {/* <AiOutlineEdit onClick={toggleEditing} />\r\n              <AiOutlineDelete onClick={commitDelete} /> */}\r\n            </div>\r\n          )}\r\n        </ActionsWrapper>\r\n      )}\r\n    </StyledFile>\r\n  );\r\n};\r\n\r\nexport { File };\r\n","D:\\mdp\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.js",["220"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AiOutlineFolderAdd,\r\n  AiOutlineFileAdd,\r\n  AiOutlineFolder,\r\n  AiOutlineFolderOpen,\r\n  AiOutlineDelete,\r\n  AiOutlineEdit,\r\n} from \"react-icons/ai\";\r\n\r\nimport {\r\n  ActionsWrapper,\r\n  Collapse,\r\n  StyledName,\r\n  VerticalLine,\r\n} from \"../Tree.style\";\r\nimport { StyledFolder } from \"./TreeFolder.style\";\r\n\r\nimport { FILE, FOLDER } from \"../state/constants\";\r\nimport { useTreeContext } from \"../state/TreeContext\";\r\nimport { PlaceholderInput } from \"../TreePlaceholderInput\";\r\n\r\nconst FolderName = ({ isOpen, name, handleClick }) => (\r\n  <StyledName onClick={handleClick}>\r\n    {isOpen ? <AiOutlineFolderOpen /> : <AiOutlineFolder />}\r\n    &nbsp;&nbsp;{name}\r\n  </StyledName>\r\n);\r\n\r\nconst Folder = ({ id, name, children, node }) => {\r\n  const { dispatch, isImparative, onNodeClick } = useTreeContext();\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [childs, setChilds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setChilds([children]);\r\n  }, [children]);\r\n\r\n  const commitFolderCreation = (name) => {\r\n    dispatch({ type: FOLDER.CREATE, payload: { id, name } });\r\n  };\r\n  const commitFileCreation = (name) => {\r\n    dispatch({ type: FILE.CREATE, payload: { id, name } });\r\n  };\r\n  const commitDeleteFolder = () => {\r\n    dispatch({ type: FOLDER.DELETE, payload: { id } });\r\n  };\r\n  const commitFolderEdit = (name) => {\r\n    dispatch({ type: FOLDER.EDIT, payload: { id, name } });\r\n    setEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n    setChilds([children]);\r\n  };\r\n\r\n  const handleNodeClick = React.useCallback(\r\n    (event) => {\r\n      event.stopPropagation();\r\n      onNodeClick({ node });\r\n    },\r\n    [node]\r\n  );\r\n\r\n  const handleFileCreation = (event) => {\r\n    event.stopPropagation();\r\n    setIsOpen(true);\r\n    setChilds([\r\n      ...childs,\r\n      <PlaceholderInput\r\n        type=\"file\"\r\n        onSubmit={commitFileCreation}\r\n        onCancel={handleCancel}\r\n      />,\r\n    ]);\r\n  };\r\n\r\n  const handleFolderCreation = (event) => {\r\n    event.stopPropagation();\r\n    setIsOpen(true);\r\n    setChilds([\r\n      ...childs,\r\n      <PlaceholderInput\r\n        type=\"folder\"\r\n        onSubmit={commitFolderCreation}\r\n        onCancel={handleCancel}\r\n      />,\r\n    ]);\r\n  };\r\n\r\n  const handleFolderRename = () => {\r\n    setIsOpen(true);\r\n    setEditing(true);\r\n  };\r\n\r\n  return (\r\n    <StyledFolder id={id} onClick={handleNodeClick} className=\"tree__folder\">\r\n      <VerticalLine>\r\n        <ActionsWrapper>\r\n          {isEditing ? (\r\n            <PlaceholderInput\r\n              type=\"folder\"\r\n              style={{ paddingLeft: 0 }}\r\n              defaultValue={name}\r\n              onCancel={handleCancel}\r\n              onSubmit={commitFolderEdit}\r\n            />\r\n          ) : (\r\n            <FolderName\r\n              name={name}\r\n              isOpen={isOpen}\r\n              handleClick={() => setIsOpen(!isOpen)}\r\n            />\r\n          )}\r\n\r\n          {isImparative && (\r\n            <div className=\"actions\">\r\n              {/* <AiOutlineEdit onClick={handleFolderRename} />\r\n              <AiOutlineFileAdd onClick={handleFileCreation} />\r\n              <AiOutlineFolderAdd onClick={handleFolderCreation} />\r\n              <AiOutlineDelete onClick={commitDeleteFolder} /> */}\r\n            </div>\r\n          )}\r\n        </ActionsWrapper>\r\n        <Collapse className=\"tree__folder--collapsible\" isOpen={isOpen}>\r\n          {childs}\r\n        </Collapse>\r\n      </VerticalLine>\r\n    </StyledFolder>\r\n  );\r\n};\r\n\r\nexport { Folder, FolderName };\r\n","D:\\mdp\\mdp-front-end\\src\\Tree\\Folder\\TreeFolder.style.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\Tree.style.js",[],"D:\\mdp\\mdp-front-end\\src\\utils.js",["221","222"],"import { useRef, useEffect } from \"react\";\r\n\r\n// @deprecated\r\nexport const findNodeById = (nodes, id) => {\r\n  let final;\r\n\r\n  function findNode(nodes, id) {\r\n    nodes.forEach((n) => {\r\n      if (n.id === id) {\r\n        final = n;\r\n        return;\r\n      }\r\n      if (n.files) findNode(n.files, id);\r\n    });\r\n  }\r\n\r\n  findNode(nodes, id);\r\n\r\n  return final;\r\n};\r\n\r\nexport const searchDFS = ({ data, cond, childPathKey = \"files\" }) => {\r\n  let final = null;\r\n  let parentPath = [];\r\n  let parent = null;\r\n  let next = null;\r\n  let prev = null;\r\n\r\n  const recursiveFind = (tree) => {\r\n    tree.forEach((item, index) => {\r\n      if (cond(item, index)) {\r\n        final = item;\r\n\r\n        if (parentPath) {\r\n          parentPath.forEach((p) => {\r\n            // check if parent has the `current item`\r\n            if (p && p[childPathKey].includes(item)) {\r\n              parent = p;\r\n              // set next & previous indexes\r\n              next = p[childPathKey][index + 1];\r\n              prev = p[childPathKey][index - 1];\r\n            } else {\r\n              parent = tree;\r\n              // if parent is null then check the root of the tree\r\n              next = tree[index + 1];\r\n              prev = tree[index - 1];\r\n            }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      if (item[childPathKey]) {\r\n        // push parent stack\r\n        parentPath.push(item);\r\n        recursiveFind(item[childPathKey]);\r\n      }\r\n    });\r\n  };\r\n\r\n  recursiveFind(data);\r\n  return {\r\n    parent,\r\n    item: final,\r\n    nextSibling: next,\r\n    previousSibling: prev,\r\n  };\r\n};\r\n\r\nexport const useDidMountEffect = (func, deps) => {\r\n  const didMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) func();\r\n    else didMount.current = true;\r\n  }, deps);\r\n};\r\n\r\nexport const createFile = ({ name }) => ({ name, type: \"file\" });\r\nexport const createFolder = ({ name }) => ({ name, type: \"folder\", files: [] });\r\n","D:\\mdp\\mdp-front-end\\src\\Tree\\File\\TreeFile.style.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\FileIcons.js",[],"D:\\mdp\\mdp-front-end\\src\\Tree\\TreePlaceholderInput.js",["223"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { AiOutlineFile } from \"react-icons/ai\";\r\n\r\nimport FILE_ICONS from \"./FileIcons\";\r\nimport { StyledFile } from \"./File/TreeFile.style\";\r\nimport { FolderName } from \"./Folder/TreeFolder\";\r\nimport { StyledFolder } from \"./Folder/TreeFolder.style\";\r\n\r\nconst FileEdit = ({ ext, inputRef, updateExt, defaultValue, style }) => {\r\n  const extension = FILE_ICONS[ext] ? FILE_ICONS[ext] : <AiOutlineFile />;\r\n\r\n  return (\r\n    <StyledFile className=\"tree__file\" style={style}>\r\n      {extension}\r\n      &nbsp;&nbsp;\r\n      <input\r\n        ref={inputRef}\r\n        onChange={updateExt}\r\n        defaultValue={defaultValue}\r\n        className=\"tree__input\"\r\n      />\r\n    </StyledFile>\r\n  );\r\n};\r\n\r\nconst FolderEdit = ({ name, inputRef, defaultValue, style }) => {\r\n  return (\r\n    <StyledFolder id={v4()} name={name} style={style}>\r\n      <FolderName\r\n        isOpen={true}\r\n        handleClick={() => {}}\r\n        name={\r\n          <input\r\n            ref={inputRef}\r\n            className=\"tree__input\"\r\n            defaultValue={defaultValue}\r\n          />\r\n        }\r\n      />\r\n    </StyledFolder>\r\n  );\r\n};\r\n\r\nconst PlaceholderInput = ({\r\n  type,\r\n  name,\r\n  onSubmit,\r\n  onCancel,\r\n  defaultValue,\r\n  style,\r\n}) => {\r\n  const [ext, setExt] = useState(\"\");\r\n  const inputRef = useRef();\r\n\r\n  const updateExt = (e) => {\r\n    let splitted = e.target.value.split(\".\");\r\n    let ext = splitted && splitted[splitted.length - 1];\r\n    setExt(ext);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!inputRef.current) return;\r\n    inputRef.current.focus();\r\n    inputRef.current.addEventListener(\"keyup\", (e) => {\r\n      if (e.key === \"Enter\") onSubmit(e.target.value);\r\n      if (e.key === \"Escape\") {\r\n        onCancel && onCancel();\r\n      }\r\n    });\r\n  }, [inputRef]);\r\n\r\n  return type === \"file\" ? (\r\n    <FileEdit\r\n      ext={ext}\r\n      style={style}\r\n      updateExt={updateExt}\r\n      inputRef={inputRef}\r\n      defaultValue={defaultValue}\r\n    />\r\n  ) : (\r\n    <FolderEdit\r\n      style={style}\r\n      name={name}\r\n      inputRef={inputRef}\r\n      defaultValue={defaultValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport { PlaceholderInput };\r\n","D:\\mdp\\mdp-front-end\\src\\SidebarActions.js",[],"D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMerge.js",["224","225","226","227","228","229","230","231"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\n// import FolderStructure from \"../FolderStructure\";\r\n// import { Tag } from \"primereact/tag\";\r\nimport { Sidebar } from \"primereact/sidebar\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport proxyServer from \"../GlobalVars\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n  const [mergedFile, setMergedFile] = useState(null);\r\n  const [nodeName, setNodeName] = useState(null);\r\n  const [nodeId, setNodeId] = useState(null);\r\n  const [visibleRight, setVisibleRight] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n  const toast = useRef(null);\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    setFileToUpload(e.target.files[0]);\r\n  };\r\n  const MergedFile = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setNodeName(mergedFile.fields.fileName);\r\n            setNodeId(mergedFile.pk);\r\n            setVisibleRight(true);\r\n            setSubmitted(false);\r\n          }}\r\n          label={mergedFile.fields.fileName}\r\n          className=\"p-button-link\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"/fifteenmmdp/getMergedFile/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length == 1) {\r\n          setMergedFile(result[0]);\r\n        }\r\n        console.log(result.length);\r\n      });\r\n  }, []);\r\n  const saveFile = () => {\r\n    setSubmitted(true);\r\n    setVisibleRight(false);\r\n    if (fileToUpload) {\r\n      const uploadData = new FormData();\r\n\r\n      uploadData.append(\"fileToUpload\", fileToUpload, fileToUpload.name);\r\n      console.log(uploadData);\r\n      axios\r\n        .post(\"/fifteenmmdp/changeMergedFile/\" + nodeId, uploadData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Unsuccessful\",\r\n            detail: \"Some error occured\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      console.log(nodeId);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n\r\n      <Sidebar\r\n        visible={visibleRight}\r\n        position=\"right\"\r\n        baseZIndex={1000000}\r\n        onHide={() => {\r\n          setSubmitted(false);\r\n          setVisibleRight(false);\r\n        }}\r\n      >\r\n        <h5 style={{ fontWeight: \"normal\" }}>\r\n          Change Merged File\r\n          <br />\r\n          <a\r\n            href={proxyServer + \"/fifteenmmdp/downloadMergedFile/\" + nodeId}\r\n            download={\"/fifteenmmdp/downloadMergedFile/\" + nodeId}\r\n          >\r\n            {\" \"}\r\n            {nodeName}{\" \"}\r\n          </a>\r\n        </h5>\r\n        <br />\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"fileToUpload\" className=\"p-sr-only\">\r\n            Merged File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"fileToUpload\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"fileToUpload\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !fileToUpload && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => saveFile()}\r\n          label=\"Save\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".25em\" }}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSubmitted(false);\r\n            setVisibleRight(false);\r\n          }}\r\n          label=\"Cancel\"\r\n          className=\"p-button-secondary\"\r\n        />\r\n      </Sidebar>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Merged File\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : mergedFile ? (\r\n            <MergedFile />\r\n          ) : (\r\n            \"Not Merged yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Merge\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterValidate.js",["232","233","234","235","236","237","238","239"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Sidebar } from \"primereact/sidebar\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport proxyServer from \"../GlobalVars\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  const [validatedFile, setValidatedFile] = useState(null);\r\n  const [nodeName, setNodeName] = useState(null);\r\n  const [nodeId, setNodeId] = useState(null);\r\n  const [visibleRight, setVisibleRight] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n  const toast = useRef(null);\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    setFileToUpload(e.target.files[0]);\r\n  };\r\n  const ValidatedFile = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setNodeName(validatedFile.fields.fileName);\r\n            setNodeId(validatedFile.pk);\r\n            setVisibleRight(true);\r\n            setSubmitted(false);\r\n          }}\r\n          label={validatedFile.fields.fileName}\r\n          className=\"p-button-link\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"/fifteenmmdp/getValidatedFile/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length == 1) {\r\n          setValidatedFile(result[0]);\r\n        }\r\n        console.log(result.length);\r\n      });\r\n  }, []);\r\n  const saveFile = () => {\r\n    setSubmitted(true);\r\n    setVisibleRight(false);\r\n    if (fileToUpload) {\r\n      const uploadData = new FormData();\r\n\r\n      uploadData.append(\"fileToUpload\", fileToUpload, fileToUpload.name);\r\n      console.log(uploadData);\r\n      axios\r\n        .post(\"/fifteenmmdp/changeValidatedFile/\" + nodeId, uploadData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Unsuccessful\",\r\n            detail: \"Some error occured\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      console.log(nodeId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <Sidebar\r\n        visible={visibleRight}\r\n        position=\"right\"\r\n        baseZIndex={1000000}\r\n        onHide={() => {\r\n          setSubmitted(false);\r\n          setVisibleRight(false);\r\n        }}\r\n      >\r\n        <h5 style={{ fontWeight: \"normal\" }}>\r\n          Change Validated File\r\n          <br />\r\n          <a\r\n            href={proxyServer + \"/fifteenmmdp/downloadValidatedFile/\" + nodeId}\r\n            download={\"/fifteenmmdp/downloadValidatedFile/\" + nodeId}\r\n          >\r\n            {\" \"}\r\n            {nodeName}{\" \"}\r\n          </a>\r\n        </h5>\r\n        <br />\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"fileToUpload\" className=\"p-sr-only\">\r\n            Validated File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"fileToUpload\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"fileToUpload\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !fileToUpload && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => saveFile()}\r\n          label=\"Save\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".25em\" }}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSubmitted(false);\r\n            setVisibleRight(false);\r\n          }}\r\n          label=\"Cancel\"\r\n          className=\"p-button-secondary\"\r\n        />\r\n      </Sidebar>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Date Filtered File Validated\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : validatedFile ? (\r\n            <ValidatedFile />\r\n          ) : (\r\n            \"Not Validated yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Validate\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterExtract.js",["240","241","242","243","244","245","246","247","248"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\n\r\nexport default function ParticularMeterExtract(props) {\r\n  let emptyMeter = {\r\n    model: \"fifteenmmdp.allmeterfiles\",\r\n    pk: null,\r\n    fields: {\r\n      year: \"\",\r\n      month: \"\",\r\n      zippedMeterFile: null,\r\n      dirStructure: null,\r\n      status: null,\r\n      dirStructureRealMWH: null,\r\n      dirStructureFictMWH: null,\r\n      dirStructureFinalOutput: null,\r\n    },\r\n  };\r\n  //   const location = useLocation();\r\n  let { meterIdParam } = useParams();\r\n  let match = useRouteMatch();\r\n\r\n  const [meter, setMeter] = useState(emptyMeter);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fifteenmmdp/getMeterData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setMeter(result[0]);\r\n        console.log(result);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"NPC Files\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : meter.fields.dirStructure ? (\r\n            <FolderStructure\r\n              dir={meter.fields.dirStructure}\r\n              fileType=\"NPCFiles\"\r\n            />\r\n          ) : (\r\n            \"Meter File not extracted yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Extract\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterMWH.js",["249","250","251","252","253","254","255","256"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { SelectButton } from \"primereact/selectbutton\";\r\nimport proxyServer from \"../GlobalVars\";\r\n\r\nexport default function ParticularMeterMWH(props) {\r\n  // let emptyRealMeterMWH = {\r\n  //   model: \"fifteenmmdp.realmetermwh\",\r\n  //   pk: null,\r\n  //   fields: {\r\n  //     meterFile: null,\r\n  //     dirStructureMWH: null,\r\n  //   },\r\n  // };\r\n  //   const location = useLocation();\r\n  let { meterIdParam } = useParams();\r\n  // let match = useRouteMatch();\r\n\r\n  // const [realMeterMWHData, setRealMeterMWHData] = useState(emptyRealMeterMWH);\r\n  const [meterFileId, setMeterFileId] = useState(null);\r\n\r\n  const [date, setDate] = useState(null);\r\n  const [dateWiseMWHDir, setdateWiseMWHDir] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [sendDir, setSendDir] = useState(null);\r\n\r\n  // const downLoadFullRealMeterMWHFiles = () => {\r\n  //   \"/fifteenmmdp/downloadRealMeterMWHFile/8/7\"\r\n\r\n  //   console.log(\"jajaja\");\r\n  // };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/fifteenmmdp/getRealMeterMWHData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length > 0) {\r\n          setMeterFileId(result[0].fields.meterFile);\r\n          let _dateWiseMWHDir = {};\r\n          let _dates = [];\r\n\r\n          let dirJson = JSON.parse(result[0].fields.dirStructureRealMWH);\r\n          dirJson.files.forEach((element) => {\r\n            _dates.push(element.name);\r\n            _dateWiseMWHDir[element.name] = element;\r\n          });\r\n          if (_dates.length > 0) {\r\n            console.log(\"hii\");\r\n            setDates(_dates);\r\n            setDate(_dates[0]);\r\n            setdateWiseMWHDir(_dateWiseMWHDir);\r\n            setSendDir(_dateWiseMWHDir[_dates[0]]);\r\n            console.log(_dateWiseMWHDir);\r\n          }\r\n        }\r\n        console.log(result);\r\n      });\r\n    // .catch((error) => {\r\n    //   console.log(\"Some server side error\");\r\n    // });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Real Meter MWH Files\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : dates.length ? (\r\n            <div className=\"p-grid\">\r\n              <div className=\"p-col\">\r\n                <SelectButton\r\n                  value={date}\r\n                  options={dates}\r\n                  onChange={(e) => {\r\n                    console.log(e.value);\r\n                    setDate(e.value);\r\n                    setSendDir(dateWiseMWHDir[e.value]);\r\n                  }}\r\n                />{\" \"}\r\n                {date && sendDir ? (\r\n                  <FolderStructure\r\n                    dir={sendDir}\r\n                    fileType=\"RealMeterMWHFiles\"\r\n                    meterId={meterFileId}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>{\" \"}\r\n              <div className=\"p-col\">\r\n                <a\r\n                  href={\r\n                    proxyServer +\r\n                    \"/fifteenmmdp/downLoadFullRealMeterMWHFiles/\" +\r\n                    meterIdParam\r\n                  }\r\n                >\r\n                  <Button\r\n                    icon=\"pi pi-download\"\r\n                    className=\"p-button-rounded p-button-help\"\r\n                    // onClick={downLoadFullRealMeterMWHFiles}\r\n                  />\r\n                </a>\r\n                {\"  \"}Download Files\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"Real Meter MWH Files not created yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Real Meter MWH Creation\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterDateFilter.js",["257","258","259","260","261","262","263","264","265"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { Sidebar } from \"primereact/sidebar\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport proxyServer from \"../GlobalVars\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  const [dateFilteredFile, setDateFilteredFile] = useState(null);\r\n  const [nodeName, setNodeName] = useState(null);\r\n  const [nodeId, setNodeId] = useState(null);\r\n  const [visibleRight, setVisibleRight] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [fileToUpload, setFileToUpload] = useState(null);\r\n  const toast = useRef(null);\r\n\r\n  const onFileChange = (e, name) => {\r\n    console.log(\"fine\");\r\n    setFileToUpload(e.target.files[0]);\r\n  };\r\n  const DateFilteredFile = () => {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setNodeName(dateFilteredFile.fields.fileName);\r\n            setNodeId(dateFilteredFile.pk);\r\n            setVisibleRight(true);\r\n            setSubmitted(false);\r\n          }}\r\n          label={dateFilteredFile.fields.fileName}\r\n          className=\"p-button-link\"\r\n        />{\" \"}\r\n        <a href={proxyServer + \"/fifteenmmdp/downloadNrxFile/\" + meterIdParam}>\r\n          <Button label=\"NRX File\" className=\"p-button-link\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"/fifteenmmdp/getDateFilteredFile/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length == 1) {\r\n          setDateFilteredFile(result[0]);\r\n        }\r\n        console.log(result.length);\r\n      });\r\n  }, []);\r\n  const saveFile = () => {\r\n    setSubmitted(true);\r\n    setVisibleRight(false);\r\n    if (fileToUpload) {\r\n      const uploadData = new FormData();\r\n\r\n      uploadData.append(\"fileToUpload\", fileToUpload, fileToUpload.name);\r\n      console.log(uploadData);\r\n      axios\r\n        .post(\"/fifteenmmdp/changeDateFilteredFile/\" + nodeId, uploadData)\r\n        .then((response) => {\r\n          console.log(response);\r\n          window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          toast.current.show({\r\n            severity: \"error\",\r\n            summary: \"Unsuccessful\",\r\n            detail: \"Some error occured\",\r\n            life: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      console.log(nodeId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toast ref={toast} />\r\n      <Sidebar\r\n        visible={visibleRight}\r\n        position=\"right\"\r\n        baseZIndex={1000000}\r\n        onHide={() => {\r\n          setSubmitted(false);\r\n          setVisibleRight(false);\r\n        }}\r\n      >\r\n        <h5 style={{ fontWeight: \"normal\" }}>\r\n          Change Date Filtered File\r\n          <br />\r\n          <a\r\n            href={\r\n              proxyServer + \"/fifteenmmdp/downloadDateFilteredFile/\" + nodeId\r\n            }\r\n            download={\"/fifteenmmdp/downloadDateFilteredFile/\" + nodeId}\r\n          >\r\n            {\" \"}\r\n            {nodeName}{\" \"}\r\n          </a>\r\n        </h5>\r\n        <br />\r\n        <div className=\"p-field\">\r\n          <label htmlFor=\"fileToUpload\" className=\"p-sr-only\">\r\n            Date Filtered File{\" \"}\r\n          </label>\r\n          <input\r\n            id=\"fileToUpload\"\r\n            type=\"file\"\r\n            onChange={(e) => onFileChange(e, \"fileToUpload\")}\r\n            required\r\n            // rows={5}\r\n            // cols={10}\r\n            // defaultValue={meter.fields.year}\r\n          />\r\n          {submitted && !fileToUpload && (\r\n            <small className=\"p-error\">File is required.</small>\r\n          )}\r\n        </div>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => saveFile()}\r\n          label=\"Save\"\r\n          className=\"p-button-success\"\r\n          style={{ marginRight: \".25em\" }}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setSubmitted(false);\r\n            setVisibleRight(false);\r\n          }}\r\n          label=\"Cancel\"\r\n          className=\"p-button-secondary\"\r\n        />\r\n      </Sidebar>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Merged File Date Filtered\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : dateFilteredFile ? (\r\n            <DateFilteredFile />\r\n          ) : (\r\n            \"Not Date Filtered yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Date Filter\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFinalOutput.js",["266","267","268","269","270","271","272","273"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { SelectButton } from \"primereact/selectbutton\";\r\nimport proxyServer from \"../GlobalVars\";\r\n\r\nexport default function ParticularMeterFinalOutput(props) {\r\n  // let emptyRealMeterMWH = {\r\n  //   model: \"fifteenmmdp.realmetermwh\",\r\n  //   pk: null,\r\n  //   fields: {\r\n  //     meterFile: null,\r\n  //     dirStructureMWH: null,\r\n  //   },\r\n  // };\r\n  //   const location = useLocation();\r\n  let { meterIdParam } = useParams();\r\n  // let match = useRouteMatch();\r\n\r\n  // const [realMeterMWHData, setRealMeterMWHData] = useState(emptyRealMeterMWH);\r\n  const [meterFileId, setMeterFileId] = useState(null);\r\n\r\n  const [date, setDate] = useState(null);\r\n  const [dateWiseFODir, setdateWiseFODir] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [sendDir, setSendDir] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/fifteenmmdp/getFinalOutputData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length > 0) {\r\n          setMeterFileId(result[0].fields.meterFile);\r\n          let _dateWiseFODir = {};\r\n          let _dates = [];\r\n\r\n          let dirJson = JSON.parse(result[0].fields.dirStructureFinalOutput);\r\n          dirJson.files.forEach((element) => {\r\n            _dates.push(element.name);\r\n            _dateWiseFODir[element.name] = element;\r\n          });\r\n          if (_dates.length > 0) {\r\n            console.log(\"hii\");\r\n            setDates(_dates);\r\n            setDate(_dates[0]);\r\n            setdateWiseFODir(_dateWiseFODir);\r\n            setSendDir(_dateWiseFODir[_dates[0]]);\r\n            console.log(_dateWiseFODir);\r\n          }\r\n        }\r\n        console.log(result);\r\n      });\r\n    // .catch((error) => {\r\n    //   console.log(\"Some server side error\");\r\n    // });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Final Output Files\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : dates.length ? (\r\n            <div className=\"p-grid\">\r\n              <div className=\"p-col\">\r\n                <SelectButton\r\n                  value={date}\r\n                  options={dates}\r\n                  onChange={(e) => {\r\n                    console.log(e.value);\r\n                    setDate(e.value);\r\n                    setSendDir(dateWiseFODir[e.value]);\r\n                  }}\r\n                />{\" \"}\r\n                {date && sendDir ? (\r\n                  <FolderStructure\r\n                    dir={sendDir}\r\n                    fileType=\"FinalOutputFiles\"\r\n                    meterId={meterFileId}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"p-col\">\r\n                <a\r\n                  href={\r\n                    proxyServer +\r\n                    \"/fifteenmmdp/downLoadFullFinalOutputFiles/\" +\r\n                    meterIdParam\r\n                  }\r\n                >\r\n                  <Button\r\n                    icon=\"pi pi-download\"\r\n                    className=\"p-button-rounded p-button-help\"\r\n                    // onClick={downLoadFullRealMeterMWHFiles}\r\n                  />\r\n                </a>\r\n                {\"  \"}Download Files\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"Final Output Files not created yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Error during Final Output Creation\" toggleable>\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterFict.js",["274","275","276","277","278","279","280","281"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\nimport { ProgressBar } from \"primereact/progressbar\";\r\nimport { SelectButton } from \"primereact/selectbutton\";\r\nimport proxyServer from \"../GlobalVars\";\r\n\r\nexport default function ParticularMeterMWH(props) {\r\n  // let emptyRealMeterMWH = {\r\n  //   model: \"fifteenmmdp.realmetermwh\",\r\n  //   pk: null,\r\n  //   fields: {\r\n  //     meterFile: null,\r\n  //     dirStructureMWH: null,\r\n  //   },\r\n  // };\r\n  //   const location = useLocation();\r\n  let { meterIdParam } = useParams();\r\n  // let match = useRouteMatch();\r\n\r\n  // const [realMeterMWHData, setRealMeterMWHData] = useState(emptyRealMeterMWH);\r\n  const [meterFileId, setMeterFileId] = useState(null);\r\n\r\n  const [date, setDate] = useState(null);\r\n  const [dateWiseMWHDir, setdateWiseMWHDir] = useState({});\r\n  const [dates, setDates] = useState([]);\r\n  const [sendDir, setSendDir] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/fifteenmmdp/getFictMeterMWHData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result.length > 0) {\r\n          setMeterFileId(result[0].fields.meterFile);\r\n          let _dateWiseMWHDir = {};\r\n          let _dates = [];\r\n\r\n          let dirJson = JSON.parse(result[0].fields.dirStructureFictMWH);\r\n          dirJson.files.forEach((element) => {\r\n            _dates.push(element.name);\r\n            _dateWiseMWHDir[element.name] = element;\r\n          });\r\n          if (_dates.length > 0) {\r\n            console.log(\"hii\");\r\n            setDates(_dates);\r\n            setDate(_dates[0]);\r\n            setdateWiseMWHDir(_dateWiseMWHDir);\r\n            setSendDir(_dateWiseMWHDir[_dates[0]]);\r\n            console.log(_dateWiseMWHDir);\r\n          }\r\n        }\r\n        console.log(result);\r\n      });\r\n    // .catch((error) => {\r\n    //   console.log(\"Some server side error\");\r\n    // });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-col\">\r\n        <Fieldset legend=\"Fictitious Meter MWH Files\" toggleable>\r\n          {props.progressbarVisible ? (\r\n            <>\r\n              <h5>Processing</h5>\r\n              <ProgressBar\r\n                mode=\"indeterminate\"\r\n                style={{ height: \"6px\" }}\r\n              ></ProgressBar>\r\n            </>\r\n          ) : dates.length ? (\r\n            <div className=\"p-grid\">\r\n              <div className=\"p-col\">\r\n                <SelectButton\r\n                  value={date}\r\n                  options={dates}\r\n                  onChange={(e) => {\r\n                    console.log(e.value);\r\n                    setDate(e.value);\r\n                    setSendDir(dateWiseMWHDir[e.value]);\r\n                  }}\r\n                />{\" \"}\r\n                {date && sendDir ? (\r\n                  <FolderStructure\r\n                    dir={sendDir}\r\n                    fileType=\"FictMeterMWHFiles\"\r\n                    meterId={meterFileId}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"p-col\">\r\n                <a\r\n                  href={\r\n                    proxyServer +\r\n                    \"/fifteenmmdp/downLoadFullFictMeterMWHFiles/\" +\r\n                    meterIdParam\r\n                  }\r\n                >\r\n                  <Button\r\n                    icon=\"pi pi-download\"\r\n                    className=\"p-button-rounded p-button-help\"\r\n                    // onClick={downLoadFullRealMeterMWHFiles}\r\n                  />\r\n                </a>\r\n                {\"  \"}Download Files\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"Fictitious Meter MWH Files not created yet\"\r\n          )}\r\n        </Fieldset>\r\n      </div>\r\n      <div className=\"p-col\">\r\n        <Fieldset\r\n          legend=\"Error during Fictitious Meter MWH Creation\"\r\n          toggleable\r\n        >\r\n          {props.ErrorMessage}\r\n        </Fieldset>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\ParticularMeterStaging\\ParticularMeterAnalyse.js",["282","283","284","285","286","287","288","289","290","291","292"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport \"../cssFiles/Grid.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { Button } from \"primereact/button\";\r\nimport axios from \"axios\";\r\nimport FolderStructure from \"../FolderStructure\";\r\n\r\nexport default function ParticularMeter(props) {\r\n  let { meterIdParam } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/fifteenmmdp/getMeterData/\" + meterIdParam)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // setMeter(result[0]);\r\n        console.log(result);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-col\">\r\n      <Fieldset legend=\"Analyse\" toggleable>\r\n        Not processed yet\r\n      </Fieldset>\r\n    </div>\r\n  );\r\n}\r\n","D:\\mdp\\mdp-front-end\\src\\GlobalVars.js",[],"D:\\mdp\\mdp-front-end\\src\\NecessaryFiles.js",[],{"ruleId":"293","severity":1,"message":"294","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":25},{"ruleId":"293","severity":1,"message":"297","line":1,"column":27,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"298","line":3,"column":8,"nodeType":"295","messageId":"296","endLine":3,"endColumn":22},{"ruleId":"293","severity":1,"message":"299","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":22},{"ruleId":"293","severity":1,"message":"300","line":6,"column":8,"nodeType":"295","messageId":"296","endLine":6,"endColumn":17},{"ruleId":"293","severity":1,"message":"301","line":7,"column":8,"nodeType":"295","messageId":"296","endLine":7,"endColumn":16},{"ruleId":"293","severity":1,"message":"302","line":8,"column":27,"nodeType":"295","messageId":"296","endLine":8,"endColumn":33},{"ruleId":"293","severity":1,"message":"303","line":8,"column":35,"nodeType":"295","messageId":"296","endLine":8,"endColumn":41},{"ruleId":"293","severity":1,"message":"304","line":8,"column":43,"nodeType":"295","messageId":"296","endLine":8,"endColumn":48},{"ruleId":"293","severity":1,"message":"305","line":8,"column":50,"nodeType":"295","messageId":"296","endLine":8,"endColumn":54},{"ruleId":"293","severity":1,"message":"306","line":9,"column":8,"nodeType":"295","messageId":"296","endLine":9,"endColumn":22},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"293","severity":1,"message":"311","line":6,"column":8,"nodeType":"295","messageId":"296","endLine":6,"endColumn":16},{"ruleId":"307","replacedBy":"312"},{"ruleId":"309","replacedBy":"313"},{"ruleId":"293","severity":1,"message":"311","line":6,"column":8,"nodeType":"295","messageId":"296","endLine":6,"endColumn":16},{"ruleId":"293","severity":1,"message":"314","line":11,"column":10,"nodeType":"295","messageId":"296","endLine":11,"endColumn":18},{"ruleId":"293","severity":1,"message":"315","line":12,"column":10,"nodeType":"295","messageId":"296","endLine":12,"endColumn":21},{"ruleId":"293","severity":1,"message":"316","line":13,"column":10,"nodeType":"295","messageId":"296","endLine":13,"endColumn":18},{"ruleId":"293","severity":1,"message":"317","line":14,"column":10,"nodeType":"295","messageId":"296","endLine":14,"endColumn":23},{"ruleId":"293","severity":1,"message":"318","line":16,"column":10,"nodeType":"295","messageId":"296","endLine":16,"endColumn":20},{"ruleId":"293","severity":1,"message":"311","line":6,"column":8,"nodeType":"295","messageId":"296","endLine":6,"endColumn":16},{"ruleId":"293","severity":1,"message":"319","line":11,"column":8,"nodeType":"295","messageId":"296","endLine":11,"endColumn":18},{"ruleId":"293","severity":1,"message":"318","line":16,"column":10,"nodeType":"295","messageId":"296","endLine":16,"endColumn":20},{"ruleId":"293","severity":1,"message":"320","line":17,"column":10,"nodeType":"295","messageId":"296","endLine":17,"endColumn":16},{"ruleId":"293","severity":1,"message":"317","line":19,"column":10,"nodeType":"295","messageId":"296","endLine":19,"endColumn":23},{"ruleId":"293","severity":1,"message":"315","line":20,"column":10,"nodeType":"295","messageId":"296","endLine":20,"endColumn":21},{"ruleId":"293","severity":1,"message":"321","line":21,"column":10,"nodeType":"295","messageId":"296","endLine":21,"endColumn":21},{"ruleId":"293","severity":1,"message":"316","line":24,"column":10,"nodeType":"295","messageId":"296","endLine":24,"endColumn":18},{"ruleId":"293","severity":1,"message":"322","line":67,"column":9,"nodeType":"295","messageId":"296","endLine":67,"endColumn":15},{"ruleId":"323","severity":1,"message":"324","line":137,"column":32,"nodeType":"325","messageId":"326","endLine":137,"endColumn":34},{"ruleId":"323","severity":1,"message":"324","line":138,"column":33,"nodeType":"325","messageId":"326","endLine":138,"endColumn":35},{"ruleId":"293","severity":1,"message":"327","line":192,"column":9,"nodeType":"295","messageId":"296","endLine":192,"endColumn":18},{"ruleId":"293","severity":1,"message":"297","line":1,"column":27,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"328","line":1,"column":38,"nodeType":"295","messageId":"296","endLine":1,"endColumn":44},{"ruleId":"293","severity":1,"message":"329","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":14},{"ruleId":"293","severity":1,"message":"305","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":7},{"ruleId":"293","severity":1,"message":"306","line":12,"column":8,"nodeType":"295","messageId":"296","endLine":12,"endColumn":22},{"ruleId":"293","severity":1,"message":"330","line":17,"column":7,"nodeType":"295","messageId":"296","endLine":17,"endColumn":14},{"ruleId":"293","severity":1,"message":"331","line":26,"column":22,"nodeType":"295","messageId":"296","endLine":26,"endColumn":35},{"ruleId":"293","severity":1,"message":"332","line":59,"column":10,"nodeType":"295","messageId":"296","endLine":59,"endColumn":14},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"300","line":13,"column":8,"nodeType":"295","messageId":"296","endLine":13,"endColumn":17},{"ruleId":"293","severity":1,"message":"333","line":17,"column":8,"nodeType":"295","messageId":"296","endLine":17,"endColumn":23},{"ruleId":"334","severity":1,"message":"335","line":170,"column":6,"nodeType":"336","endLine":170,"endColumn":8,"suggestions":"337"},{"ruleId":"293","severity":1,"message":"338","line":1,"column":38,"nodeType":"295","messageId":"296","endLine":1,"endColumn":53},{"ruleId":"293","severity":1,"message":"306","line":7,"column":8,"nodeType":"295","messageId":"296","endLine":7,"endColumn":22},{"ruleId":"334","severity":1,"message":"339","line":57,"column":6,"nodeType":"336","endLine":57,"endColumn":13,"suggestions":"340"},{"ruleId":"323","severity":1,"message":"341","line":100,"column":24,"nodeType":"325","messageId":"326","endLine":100,"endColumn":26},{"ruleId":"342","severity":1,"message":"343","line":50,"column":26,"nodeType":"344","messageId":"345","endLine":50,"endColumn":28},{"ruleId":"334","severity":1,"message":"346","line":33,"column":5,"nodeType":"336","endLine":33,"endColumn":11,"suggestions":"347"},{"ruleId":"334","severity":1,"message":"346","line":64,"column":5,"nodeType":"336","endLine":64,"endColumn":11,"suggestions":"348"},{"ruleId":"334","severity":1,"message":"349","line":75,"column":6,"nodeType":"295","endLine":75,"endColumn":10},{"ruleId":"334","severity":1,"message":"350","line":75,"column":6,"nodeType":"295","endLine":75,"endColumn":10,"suggestions":"351"},{"ruleId":"334","severity":1,"message":"352","line":71,"column":6,"nodeType":"336","endLine":71,"endColumn":16,"suggestions":"353"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"323","severity":1,"message":"341","line":57,"column":27,"nodeType":"325","messageId":"326","endLine":57,"endColumn":29},{"ruleId":"334","severity":1,"message":"356","line":62,"column":6,"nodeType":"336","endLine":62,"endColumn":8,"suggestions":"357"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"323","severity":1,"message":"341","line":56,"column":27,"nodeType":"325","messageId":"326","endLine":56,"endColumn":29},{"ruleId":"334","severity":1,"message":"356","line":61,"column":6,"nodeType":"336","endLine":61,"endColumn":8,"suggestions":"358"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"359","line":14,"column":10,"nodeType":"295","messageId":"296","endLine":14,"endColumn":16},{"ruleId":"293","severity":1,"message":"360","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":13},{"ruleId":"293","severity":1,"message":"361","line":36,"column":7,"nodeType":"295","messageId":"296","endLine":36,"endColumn":12},{"ruleId":"334","severity":1,"message":"356","line":47,"column":6,"nodeType":"336","endLine":47,"endColumn":8,"suggestions":"362"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"293","severity":1,"message":"360","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":13},{"ruleId":"334","severity":1,"message":"356","line":76,"column":6,"nodeType":"336","endLine":76,"endColumn":8,"suggestions":"363"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"293","severity":1,"message":"333","line":16,"column":8,"nodeType":"295","messageId":"296","endLine":16,"endColumn":23},{"ruleId":"323","severity":1,"message":"341","line":60,"column":27,"nodeType":"325","messageId":"326","endLine":60,"endColumn":29},{"ruleId":"334","severity":1,"message":"356","line":65,"column":6,"nodeType":"336","endLine":65,"endColumn":8,"suggestions":"364"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"293","severity":1,"message":"360","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":13},{"ruleId":"334","severity":1,"message":"356","line":70,"column":6,"nodeType":"336","endLine":70,"endColumn":8,"suggestions":"365"},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"293","severity":1,"message":"360","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":13},{"ruleId":"334","severity":1,"message":"356","line":70,"column":6,"nodeType":"336","endLine":70,"endColumn":8,"suggestions":"366"},{"ruleId":"293","severity":1,"message":"294","line":1,"column":28,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"302","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":26},{"ruleId":"293","severity":1,"message":"303","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":9},{"ruleId":"293","severity":1,"message":"304","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":8},{"ruleId":"293","severity":1,"message":"305","line":6,"column":3,"nodeType":"295","messageId":"296","endLine":6,"endColumn":7},{"ruleId":"293","severity":1,"message":"354","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":11},{"ruleId":"293","severity":1,"message":"355","line":8,"column":3,"nodeType":"295","messageId":"296","endLine":8,"endColumn":16},{"ruleId":"293","severity":1,"message":"359","line":14,"column":10,"nodeType":"295","messageId":"296","endLine":14,"endColumn":16},{"ruleId":"293","severity":1,"message":"360","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":13},{"ruleId":"293","severity":1,"message":"333","line":16,"column":8,"nodeType":"295","messageId":"296","endLine":16,"endColumn":23},{"ruleId":"334","severity":1,"message":"356","line":28,"column":6,"nodeType":"336","endLine":28,"endColumn":8,"suggestions":"367"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FileUploadDemo' is defined but never used.","'FormLayoutDemo' is defined but never used.","'DataTable' is defined but never used.","'TempSave' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'SidebarActions' is defined but never used.","no-native-reassign",["368"],"no-negated-in-lhs",["369"],"'ReactDOM' is defined but never used.",["368"],["369"],"'Checkbox' is defined but never used.","'RadioButton' is defined but never used.","'Dropdown' is defined but never used.","'InputTextarea' is defined but never used.","'FileUpload' is defined but never used.","'classNames' is defined but never used.","'Rating' is defined but never used.","'InputNumber' is defined but never used.","'months' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'editMeter' is assigned a value but never used.","'useRef' is defined but never used.","'useLocation' is defined but never used.","'history' is assigned a value but never used.","'setActiveItem' is assigned a value but never used.","'Home' is defined but never used.","'FolderStructure' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'StatusMap', 'history', and 'meterIdParam'. Either include them or remove the dependency array.","ArrayExpression",["370"],"'useLayoutEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'FileTypeMap'. Either include it or remove the dependency array.",["371"],"Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useCallback has a missing dependency: 'onNodeClick'. Either include it or remove the dependency array.",["372"],["373"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["374"],"React Hook useEffect has missing dependencies: 'onCancel' and 'onSubmit'. Either include them or remove the dependency array. If 'onSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["375"],"'Redirect' is defined but never used.","'useRouteMatch' is defined but never used.","React Hook useEffect has a missing dependency: 'meterIdParam'. Either include it or remove the dependency array.",["376"],["377"],"'Button' is defined but never used.","'axios' is defined but never used.","'match' is assigned a value but never used.",["378"],["379"],["380"],["381"],["382"],["383"],"no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"388","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"395","fix":"397"},{"desc":"395","fix":"398"},{"desc":"395","fix":"399"},{"desc":"395","fix":"400"},{"desc":"395","fix":"401"},{"desc":"395","fix":"402"},{"desc":"395","fix":"403"},"Update the dependencies array to be: [StatusMap, history, meterIdParam]",{"range":"404","text":"405"},"Update the dependencies array to be: [FileTypeMap, props]",{"range":"406","text":"407"},"Update the dependencies array to be: [node, onNodeClick]",{"range":"408","text":"409"},{"range":"410","text":"409"},"Update the dependencies array to be: [func]",{"range":"411","text":"412"},"Update the dependencies array to be: [inputRef, onCancel, onSubmit]",{"range":"413","text":"414"},"Update the dependencies array to be: [meterIdParam]",{"range":"415","text":"416"},{"range":"417","text":"416"},{"range":"418","text":"416"},{"range":"419","text":"416"},{"range":"420","text":"416"},{"range":"421","text":"416"},{"range":"422","text":"416"},{"range":"423","text":"416"},[5230,5232],"[StatusMap, history, meterIdParam]",[2001,2008],"[FileTypeMap, props]",[1098,1104],"[node, onNodeClick]",[1706,1712],[1774,1778],"[func]",[1830,1840],"[inputRef, onCancel, onSubmit]",[1913,1915],"[meterIdParam]",[1843,1845],[1275,1277],[2408,2410],[2083,2085],[2263,2265],[2260,2262],[765,767]]